<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Krypton Docking</name>
  </assembly>
  <members>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.HWND_TOPMOST">
      <summary>
                Places the window above all non-topmost windows. The window maintains its topmost position even when it is deactivated.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.HWND_NOTOPMOST">
      <summary>
                Places the window above all non-topmost windows (that is, behind all topmost windows). This flag has no effect if the window is already a non-topmost window.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.HWND_TOP">
      <summary>
                Places the window at the top of the Z order.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.HWND_BOTTOM">
      <summary>
                Places the window at the bottom of the Z order. If the hWnd parameter identifies a topmost window, the window loses its topmost status and is placed at the bottom of all other windows.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SWP_.NOSIZE">
      <summary>Retains the current size (ignores the cx and cy parameters).</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SWP_.NOMOVE">
      <summary>Retains the current position (ignores X and Y parameters).</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SWP_.NOZORDER">
      <summary>Retains the current Z order (ignores the hWndInsertAfter parameter).</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SWP_.NOREDRAW">
      <summary>Does not redraw changes. If this flag is set, no repainting of any kind occurs. This applies to
            the client area, the nonclient area (including the title bar and scroll bars), and any part of the parent
            window uncovered as a result of the window being moved. When this flag is set, the application must
            explicitly invalidate or redraw any parts of the window and parent window that need redrawing.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SWP_.NOACTIVATE">
      <summary>Does not activate the window. If this flag is not set, the window is activated and moved to the
            top of either the topmost or non-topmost group (depending on the setting of the hWndInsertAfter
            parameter).</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SWP_.DRAWFRAME">
      <summary>Draws a frame (defined in the window's class description) around the window.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SWP_.FRAMECHANGED">
      <summary>Applies new frame styles set using the SetWindowLong function. Sends a WM_NCCALCSIZE message to
            the window, even if the window's size is not being changed. If this flag is not specified, WM_NCCALCSIZE
            is sent only when the window's size is being changed.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SWP_.SHOWWINDOW">
      <summary>Displays the window.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SWP_.HIDEWINDOW">
      <summary>Hides the window.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SWP_.NOCOPYBITS">
      <summary>Discards the entire contents of the client area. If this flag is not specified, the valid
            contents of the client area are saved and copied back into the client area after the window is sized or
            repositioned.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SWP_.NOOWNERZORDER">
      <summary>Does not change the owner window's position in the Z order.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SWP_.NOREPOSITION">
      <summary>Same as the SWP_NOOWNERZORDER flag.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SWP_.DONOTSENDCHANGINGEVENT">
      <summary>Prevents the window from receiving the WM_WINDOWPOSCHANGING message.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SWP_.DEFERERASE">
      <summary>Prevents generation of the WM_SYNCPAINT message.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SWP_.ASYNCWINDOWPOS">
      <summary>If the calling thread and the thread that owns the window are attached to different input queues,
            the system posts the request to the thread that owns the window. This prevents the calling thread from
            blocking its execution while other threads process the request.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.BeepType.SimpleBeep">
      <summary>
            A simple windows beep
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.BeepType.OK">
      <summary>
            A standard windows OK beep
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.BeepType.Question">
      <summary>
            A standard windows Question beep
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.BeepType.Exclamation">
      <summary>
            A standard windows Exclamation beep
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.BeepType.Asterisk">
      <summary>
            A standard windows Asterisk beep
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Toolkit.PI.SM_">
      <summary>
            Flags used with the Windows API (User32.dll):GetSystemMetrics(SystemMetric smIndex)
              
            This Enum and declaration signature was written by Gabriel T. Sharp
            ai_productions@verizon.net or osirisgothra@hotmail.com
            Obtained on pinvoke.net, please contribute your code to support the wiki!
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.ARRANGE">
      <summary>
            The flags that specify how the system arranged minimized windows. For more information, see the Remarks section in this topic.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CLEANBOOT">
      <summary>
            The value that specifies how the system is started: 
            0 Normal boot
            1 Fail-safe boot
            2 Fail-safe with network boot
            A fail-safe boot (also called SafeBoot, Safe Mode, or Clean Boot) bypasses the user startup files.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CMONITORS">
      <summary>
            The number of display monitors on a desktop. For more information, see the Remarks section in this topic.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CMOUSEBUTTONS">
      <summary>
            The number of buttons on a mouse, or zero if no mouse is installed.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXBORDER">
      <summary>
            The width of a window border, in pixels. This is equivalent to the SM_CXEDGE value for windows with the 3-D look.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXCURSOR">
      <summary>
            The width of a cursor, in pixels. The system cannot create cursors of other sizes.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXDLGFRAME">
      <summary>
            This value is the same as SM_CXFIXEDFRAME.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXDOUBLECLK">
      <summary>
            The width of the rectangle around the location of a first click in a double-click sequence, in pixels. ,
            The second click must occur within the rectangle that is defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK for the system
            to consider the two clicks a double-click. The two clicks must also occur within a specified time.
            To set the width of the double-click rectangle, call SystemParametersInfo with SPI_SETDOUBLECLKWIDTH.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXDRAG">
      <summary>
            The number of pixels on either side of a mouse-down point that the mouse pointer can move before a drag operation begins. 
            This allows the user to click and release the mouse button easily without unintentionally starting a drag operation. 
            If this value is negative, it is subtracted from the left of the mouse-down point and added to the right of it.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXEDGE">
      <summary>
            The width of a 3-D border, in pixels. This metric is the 3-D counterpart of SM_CXBORDER.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXFIXEDFRAME">
      <summary>
            The thickness of the frame around the perimeter of a window that has a caption but is not sizable, in pixels.
            SM_CXFIXEDFRAME is the height of the horizontal border, and SM_CYFIXEDFRAME is the width of the vertical border.
            This value is the same as SM_CXDLGFRAME.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXFOCUSBORDER">
      <summary>
            The width of the left and right edges of the focus rectangle that the DrawFocusRectdraws. 
            This value is in pixels. 
            Windows 2000:  This value is not supported.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXFRAME">
      <summary>
            This value is the same as SM_CXSIZEFRAME.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXFULLSCREEN">
      <summary>
            The width of the client area for a full-screen window on the primary display monitor, in pixels. 
            To get the coordinates of the portion of the screen that is not obscured by the system taskbar or by application desktop toolbars, 
            call the SystemParametersInfofunction with the SPI_GETWORKAREA value.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXHSCROLL">
      <summary>
            The width of the arrow bitmap on a horizontal scroll bar, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXHTHUMB">
      <summary>
            The width of the thumb box in a horizontal scroll bar, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXICON">
      <summary>
            The default width of an icon, in pixels. The LoadIcon function can load only icons with the dimensions 
            that SM_CXICON and SM_CYICON specifies.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXICONSPACING">
      <summary>
            The width of a grid cell for items in large icon view, in pixels. Each item fits into a rectangle of size 
            SM_CXICONSPACING by SM_CYICONSPACING when arranged. This value is always greater than or equal to SM_CXICON.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXMAXIMIZED">
      <summary>
            The default width, in pixels, of a maximized top-level window on the primary display monitor.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXMAXTRACK">
      <summary>
            The default maximum width of a window that has a caption and sizing borders, in pixels. 
            This metric refers to the entire desktop. The user cannot drag the window frame to a size larger than these dimensions. 
            A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXMENUCHECK">
      <summary>
            The width of the default menu check-mark bitmap, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXMENUSIZE">
      <summary>
            The width of menu bar buttons, such as the child window close button that is used in the multiple document interface, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXMIN">
      <summary>
            The minimum width of a window, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXMINIMIZED">
      <summary>
            The width of a minimized window, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXMINSPACING">
      <summary>
            The width of a grid cell for a minimized window, in pixels. Each minimized window fits into a rectangle this size when arranged. 
            This value is always greater than or equal to SM_CXMINIMIZED.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXMINTRACK">
      <summary>
            The minimum tracking width of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions. 
            A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXPADDEDBORDER">
      <summary>
            The amount of border padding for captioned windows, in pixels. Windows XP/2000:  This value is not supported.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXSCREEN">
      <summary>
            The width of the screen of the primary display monitor, in pixels. This is the same value obtained by calling 
            GetDeviceCaps as follows: GetDeviceCaps( hdcPrimaryMonitor, HORZRES).
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXSIZE">
      <summary>
            The width of a button in a window caption or title bar, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXSIZEFRAME">
      <summary>
            The thickness of the sizing border around the perimeter of a window that can be resized, in pixels. 
            SM_CXSIZEFRAME is the width of the horizontal border, and SM_CYSIZEFRAME is the height of the vertical border. 
            This value is the same as SM_CXFRAME.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXSMICON">
      <summary>
            The recommended width of a small icon, in pixels. Small icons typically appear in window captions and in small icon view.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXSMSIZE">
      <summary>
            The width of small caption buttons, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXVIRTUALSCREEN">
      <summary>
            The width of the virtual screen, in pixels. The virtual screen is the bounding rectangle of all display monitors. 
            The SM_XVIRTUALSCREEN metric is the coordinates for the left side of the virtual screen.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CXVSCROLL">
      <summary>
            The width of a vertical scroll bar, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYBORDER">
      <summary>
            The height of a window border, in pixels. This is equivalent to the SM_CYEDGE value for windows with the 3-D look.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYCAPTION">
      <summary>
            The height of a caption area, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYCURSOR">
      <summary>
            The height of a cursor, in pixels. The system cannot create cursors of other sizes.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYDLGFRAME">
      <summary>
            This value is the same as SM_CYFIXEDFRAME.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYDOUBLECLK">
      <summary>
            The height of the rectangle around the location of a first click in a double-click sequence, in pixels. 
            The second click must occur within the rectangle defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK for the system to consider 
            the two clicks a double-click. The two clicks must also occur within a specified time. To set the height of the double-click 
            rectangle, call SystemParametersInfo with SPI_SETDOUBLECLKHEIGHT.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYDRAG">
      <summary>
            The number of pixels above and below a mouse-down point that the mouse pointer can move before a drag operation begins. 
            This allows the user to click and release the mouse button easily without unintentionally starting a drag operation. 
            If this value is negative, it is subtracted from above the mouse-down point and added below it.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYEDGE">
      <summary>
            The height of a 3-D border, in pixels. This is the 3-D counterpart of SM_CYBORDER.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYFIXEDFRAME">
      <summary>
            The thickness of the frame around the perimeter of a window that has a caption but is not sizable, in pixels. 
            SM_CXFIXEDFRAME is the height of the horizontal border, and SM_CYFIXEDFRAME is the width of the vertical border. 
            This value is the same as SM_CYDLGFRAME.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYFOCUSBORDER">
      <summary>
            The height of the top and bottom edges of the focus rectangle drawn byDrawFocusRect. 
            This value is in pixels. 
            Windows 2000:  This value is not supported.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYFRAME">
      <summary>
            This value is the same as SM_CYSIZEFRAME.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYFULLSCREEN">
      <summary>
            The height of the client area for a full-screen window on the primary display monitor, in pixels. 
            To get the coordinates of the portion of the screen not obscured by the system taskbar or by application desktop toolbars,
            call the SystemParametersInfo function with the SPI_GETWORKAREA value.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYHSCROLL">
      <summary>
            The height of a horizontal scroll bar, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYICON">
      <summary>
            The default height of an icon, in pixels. The LoadIcon function can load only icons with the dimensions SM_CXICON and SM_CYICON.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYICONSPACING">
      <summary>
            The height of a grid cell for items in large icon view, in pixels. Each item fits into a rectangle of size 
            SM_CXICONSPACING by SM_CYICONSPACING when arranged. This value is always greater than or equal to SM_CYICON.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYKANJIWINDOW">
      <summary>
            For double byte character set versions of the system, this is the height of the Kanji window at the bottom of the screen, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYMAXIMIZED">
      <summary>
            The default height, in pixels, of a maximized top-level window on the primary display monitor.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYMAXTRACK">
      <summary>
            The default maximum height of a window that has a caption and sizing borders, in pixels. This metric refers to the entire desktop. 
            The user cannot drag the window frame to a size larger than these dimensions. A window can override this value by processing 
            the WM_GETMINMAXINFO message.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYMENU">
      <summary>
            The height of a single-line menu bar, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYMENUCHECK">
      <summary>
            The height of the default menu check-mark bitmap, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYMENUSIZE">
      <summary>
            The height of menu bar buttons, such as the child window close button that is used in the multiple document interface, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYMIN">
      <summary>
            The minimum height of a window, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYMINIMIZED">
      <summary>
            The height of a minimized window, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYMINSPACING">
      <summary>
            The height of a grid cell for a minimized window, in pixels. Each minimized window fits into a rectangle this size when arranged. 
            This value is always greater than or equal to SM_CYMINIMIZED.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYMINTRACK">
      <summary>
            The minimum tracking height of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions. 
            A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYSCREEN">
      <summary>
            The height of the screen of the primary display monitor, in pixels. This is the same value obtained by calling 
            GetDeviceCaps as follows: GetDeviceCaps( hdcPrimaryMonitor, VERTRES).
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYSIZE">
      <summary>
            The height of a button in a window caption or title bar, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYSIZEFRAME">
      <summary>
            The thickness of the sizing border around the perimeter of a window that can be resized, in pixels. 
            SM_CXSIZEFRAME is the width of the horizontal border, and SM_CYSIZEFRAME is the height of the vertical border. 
            This value is the same as SM_CYFRAME.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYSMCAPTION">
      <summary>
            The height of a small caption, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYSMICON">
      <summary>
            The recommended height of a small icon, in pixels. Small icons typically appear in window captions and in small icon view.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYSMSIZE">
      <summary>
            The height of small caption buttons, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYVIRTUALSCREEN">
      <summary>
            The height of the virtual screen, in pixels. The virtual screen is the bounding rectangle of all display monitors. 
            The SM_YVIRTUALSCREEN metric is the coordinates for the top of the virtual screen.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYVSCROLL">
      <summary>
            The height of the arrow bitmap on a vertical scroll bar, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.CYVTHUMB">
      <summary>
            The height of the thumb box in a vertical scroll bar, in pixels.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.DBCSENABLED">
      <summary>
            Nonzero if User32.dll supports DBCS; otherwise, 0.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.DEBUG">
      <summary>
            Nonzero if the debug version of User.exe is installed; otherwise, 0.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.DIGITIZER">
      <summary>
            Nonzero if the current operating system is Windows 7 or Windows Server 2008 R2 and the Tablet PC Input 
            service is started; otherwise, 0. The return value is a bitmask that specifies the type of digitizer input supported by the device. 
            For more information, see Remarks. 
            Windows Server 2008, Windows Vista, and Windows XP/2000:  This value is not supported.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.IMMENABLED">
      <summary>
            Nonzero if Input Method Manager/Input Method Editor features are enabled; otherwise, 0. 
            SM_IMMENABLED indicates whether the system is ready to use a Unicode-based IME on a Unicode application. 
            To ensure that a language-dependent IME works, check SM_DBCSENABLED and the system ANSI code page.
            Otherwise the ANSI-to-Unicode conversion may not be performed correctly, or some components like fonts
            or registry settings may not be present.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.MAXIMUMTOUCHES">
      <summary>
            Nonzero if there are digitizers in the system; otherwise, 0. SM_MAXIMUMTOUCHES returns the aggregate maximum of the 
            maximum number of contacts supported by every digitizer in the system. If the system has only single-touch digitizers, 
            the return value is 1. If the system has multi-touch digitizers, the return value is the number of simultaneous contacts 
            the hardware can provide. Windows Server 2008, Windows Vista, and Windows XP/2000:  This value is not supported.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.MEDIACENTER">
      <summary>
            Nonzero if the current operating system is the Windows XP, Media Center Edition, 0 if not.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.MENUDROPALIGNMENT">
      <summary>
            Nonzero if drop-down menus are right-aligned with the corresponding menu-bar item; 0 if the menus are left-aligned.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.MIDEASTENABLED">
      <summary>
            Nonzero if the system is enabled for Hebrew and Arabic languages, 0 if not.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.MOUSEPRESENT">
      <summary>
            Nonzero if a mouse is installed; otherwise, 0. This value is rarely zero, because of support for virtual mice and because 
            some systems detect the presence of the port instead of the presence of a mouse.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.MOUSEHORIZONTALWHEELPRESENT">
      <summary>
            Nonzero if a mouse with a horizontal scroll wheel is installed; otherwise 0.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.MOUSEWHEELPRESENT">
      <summary>
            Nonzero if a mouse with a vertical scroll wheel is installed; otherwise 0.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.NETWORK">
      <summary>
            The least significant bit is set if a network is present; otherwise, it is cleared. The other bits are reserved for future use.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.PENWINDOWS">
      <summary>
            Nonzero if the Microsoft Windows for Pen computing extensions are installed; zero otherwise.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.REMOTECONTROL">
      <summary>
            This system metric is used in a Terminal Services environment to determine if the current Terminal Server session is 
            being remotely controlled. Its value is nonzero if the current session is remotely controlled; otherwise, 0. 
            You can use terminal services management tools such as Terminal Services Manager (tsadmin.msc) and shadow.exe to 
            control a remote session. When a session is being remotely controlled, another user can view the contents of that session 
            and potentially interact with it.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.REMOTESESSION">
      <summary>
            This system metric is used in a Terminal Services environment. If the calling process is associated with a Terminal Services 
            client session, the return value is nonzero. If the calling process is associated with the Terminal Services console session, 
            the return value is 0. 
            Windows Server 2003 and Windows XP:  The console session is not necessarily the physical console. 
            For more information, seeWTSGetActiveConsoleSessionId.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.SAMEDISPLAYFORMAT">
      <summary>
            Nonzero if all the display monitors have the same color format, otherwise, 0. Two displays can have the same bit depth, 
            but different color formats. For example, the red, green, and blue pixels can be encoded with different numbers of bits, 
            or those bits can be located in different places in a pixel color value.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.SECURE">
      <summary>
            This system metric should be ignored; it always returns 0.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.SERVERR2">
      <summary>
            The build number if the system is Windows Server 2003 R2; otherwise, 0.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.SHOWSOUNDS">
      <summary>
            Nonzero if the user requires an application to present information visually in situations where it would otherwise present 
            the information only in audible form; otherwise, 0.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.SHUTTINGDOWN">
      <summary>
            Nonzero if the current session is shutting down; otherwise, 0. Windows 2000:  This value is not supported.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.SLOWMACHINE">
      <summary>
            Nonzero if the computer has a low-end (slow) processor; otherwise, 0.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.STARTER">
      <summary>
            Nonzero if the current operating system is Windows 7 Starter Edition, Windows Vista Starter, or Windows XP Starter Edition; otherwise, 0.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.SWAPBUTTON">
      <summary>
            Nonzero if the meanings of the left and right mouse buttons are swapped; otherwise, 0.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.TABLETPC">
      <summary>
            Nonzero if the current operating system is the Windows XP Tablet PC edition or if the current operating system is Windows Vista
            or Windows 7 and the Tablet PC Input service is started; otherwise, 0. The SM_DIGITIZER setting indicates the type of digitizer 
            input supported by a device running Windows 7 or Windows Server 2008 R2. For more information, see Remarks.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.XVIRTUALSCREEN">
      <summary>
            The coordinates for the left side of the virtual screen. The virtual screen is the bounding rectangle of all display monitors. 
            The SM_CXVIRTUALSCREEN metric is the width of the virtual screen.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SM_.YVIRTUALSCREEN">
      <summary>
            The coordinates for the top of the virtual screen. The virtual screen is the bounding rectangle of all display monitors. 
            The SM_CYVIRTUALSCREEN metric is the height of the virtual screen.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.ShowWindowCommands.SW_HIDE">
      <summary>
            Hides the window and activates another window.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.ShowWindowCommands.SW_NORMAL">
      <summary>
            Activates and displays a window. If the window is minimized or
            maximized, the system restores it to its original size and position.
            An application should specify this flag when displaying the window
            for the first time.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWMINIMIZED">
      <summary>
            Activates the window and displays it as a minimized window.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWMAXIMIZED">
      <summary>
            Activates the window and displays it as a maximized window.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWNOACTIVATE">
      <summary>
            Displays a window in its most recent size and position. This value
            is similar to <see cref="F:ComponentFactory.Krypton.Toolkit.PI.ShowWindowCommands.SW_NORMAL" />, except
            the window is not activated.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOW">
      <summary>
            Activates the window and displays it in its current size and position.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.ShowWindowCommands.SW_MINIMIZE">
      <summary>
            Minimizes the specified window and activates the next top-level
            window in the Z order.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWMINNOACTIVE">
      <summary>
            Displays the window as a minimized window. This value is similar to
            <see cref="F:ComponentFactory.Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWMINIMIZED" />, except the
            window is not activated.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWNA">
      <summary>
            Displays the window in its current size and position. This value is
            similar to <see cref="F:ComponentFactory.Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOW" />, except the
            window is not activated.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.ShowWindowCommands.SW_RESTORE">
      <summary>
            Activates and displays the window. If the window is minimized or
            maximized, the system restores it to its original size and position.
            An application should specify this flag when restoring a minimized window.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWDEFAULT">
      <summary>
            Sets the show state based on the SW_* value specified in the
            STARTUPINFO structure passed to the CreateProcess function by the
            program that started the application.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.ShowWindowCommands.SW_FORCEMINIMIZE">
      <summary>
        <b>Windows 2000/XP:</b> Minimizes a window, even if the thread
            that owns the window is not responding. This flag should only be
            used when minimizing windows from a different thread.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Toolkit.PI.WM_">
      <summary>
            I needed some "Generic" magic to get from an enum to an int for switch and boolean operands
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Toolkit.PI.CS_">
      <summary>
            CS_*
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.GetWindowType.GW_HWNDFIRST">
      <summary>
            The retrieved handle identifies the window of the same type that is highest in the Z order.
            <para />
            If the specified window is a topmost window, the handle identifies a topmost window.
            If the specified window is a top-level window, the handle identifies a top-level window.
            If the specified window is a child window, the handle identifies a sibling window.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.GetWindowType.GW_HWNDLAST">
      <summary>
            The retrieved handle identifies the window of the same type that is lowest in the Z order.
            <para />
            If the specified window is a topmost window, the handle identifies a topmost window.
            If the specified window is a top-level window, the handle identifies a top-level window.
            If the specified window is a child window, the handle identifies a sibling window.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.GetWindowType.GW_HWNDNEXT">
      <summary>
            The retrieved handle identifies the window below the specified window in the Z order.
            <para />
            If the specified window is a topmost window, the handle identifies a topmost window.
            If the specified window is a top-level window, the handle identifies a top-level window.
            If the specified window is a child window, the handle identifies a sibling window.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.GetWindowType.GW_HWNDPREV">
      <summary>
            The retrieved handle identifies the window above the specified window in the Z order.
            <para />
            If the specified window is a topmost window, the handle identifies a topmost window.
            If the specified window is a top-level window, the handle identifies a top-level window.
            If the specified window is a child window, the handle identifies a sibling window.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.GetWindowType.GW_OWNER">
      <summary>
            The retrieved handle identifies the specified window's owner window, if any.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.GetWindowType.GW_CHILD">
      <summary>
            The retrieved handle identifies the child window at the top of the Z order,
            if the specified window is a parent window; otherwise, the retrieved handle is NULL.
            The function examines only child windows of the specified window. It does not examine descendant windows.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.GetWindowType.GW_ENABLEDPOPUP">
      <summary>
            The retrieved handle identifies the enabled popup window owned by the specified window (the
            search uses the first such window found using GW_HWNDNEXT); otherwise, if there are no enabled
            popup windows, the retrieved handle is that of the specified window.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Toolkit.PI.WS_">
      <summary>
            Window Styles.
            The following styles can be specified wherever a window style is required. After the control has been created, these styles cannot be modified, except as noted.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Toolkit.PI.WS_EX_">
      <summary>
            Window style extended values, WS_EX_*
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.SC_.F_ISSECURE">
      <summary>
            SCF_ISSECURE
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Toolkit.PI.HT">
      <summary>
            Non-client hit test values, HT*
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Toolkit.PI.GWL_">
      <summary>
            GetWindowLongPtr values, GWL_*
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.HSHELL_REDRAW">
      <summary>
            https://msdn.microsoft.com/en-us/library/windows/desktop/ms644991(v=vs.85).aspx 
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Toolkit.PI.GetWindow(System.IntPtr,ComponentFactory.Krypton.Toolkit.PI.GetWindowType)">
      <summary>
            Retrieves a handle to a window that has the specified relationship (Z-Order or owner) to the specified window.
            </summary>
      <remarks>The EnumChildWindows function is more reliable than calling GetWindow in a loop. An application that
            calls GetWindow to perform this task risks being caught in an infinite loop or referencing a handle to a window
            that has been destroyed.</remarks>
      <param name="hWnd">A handle to a window. The window handle retrieved is relative to this window, based on the
            value of the uCmd parameter.</param>
      <param name="uCmd">The relationship between the specified window and the window whose handle is to be
            retrieved.</param>
      <returns>
            If the function succeeds, the return value is a window handle. If no window exists with the specified relationship
            to the specified window, the return value is NULL. To get extended error information, call GetLastError.
            </returns>
    </member>
    <member name="T:ComponentFactory.Krypton.Toolkit.PI.MONITORINFO">
      <summary>
      </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.MONITORINFO.cbSize">
      <summary>
      </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.MONITORINFO.rcMonitor">
      <summary>
      </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.MONITORINFO.rcWork">
      <summary>
      </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Toolkit.PI.MONITORINFO.dwFlags">
      <summary>
      </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Toolkit.PI.IsKeyDown(System.Windows.Forms.Keys)">
      <summary>
            Is the specified key currently pressed down.
            </summary>
      <param name="key">Key to test.</param>
      <returns>True if pressed; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Toolkit.PI.IsKeyToggled(System.Windows.Forms.Keys)">
      <summary>
            Is the specified key currently toggled.
            </summary>
      <param name="key">Key to test.</param>
      <returns>True if toggled; otherwise false.</returns>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockableNavigator">
      <summary>
            Extends the KryptonNavigator to work within the docking framework.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockableNavigator.CellPageInserting">
      <summary>
            Occurs when a page is being inserted into the navigator.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockableNavigator.PageDropDownClicked">
      <summary>
            Occurs when a page requests that a drop down menu be shown.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockableNavigator.#ctor">
      <summary>
            Initialize a new instance of the KryptonDockableNavigator class.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockableNavigator.OnCellPageInserting(ComponentFactory.Krypton.Navigator.KryptonPageEventArgs)">
      <summary>
            Raises the CellPageInserting event.
            </summary>
      <param name="e">An KryptonPageEventArgs containing the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockableNavigator.OnPageDropDownClicked(ComponentFactory.Krypton.Docking.CancelDropDownEventArgs)">
      <summary>
            Raises the PageDropDownClicked event.
            </summary>
      <param name="e">An CancelDropDownEventArgs containing the event data.</param>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockspaceSlide">
      <summary>
            Extends the KryptonWorkspace to work within the docking edge of a control.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockspaceSlide.#ctor">
      <summary>
            Initialize a new instance of the KryptonDockspaceSlide class.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockspaceSlide.NewCellInitialize(ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell)">
      <summary>
            Initialize a new cell.
            </summary>
      <param name="cell">Cell being added to the control.</param>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonStorePage">
      <summary>
            Acts as a placeholder for a KryptonPage so that it can be restored to this location at a later time.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonStorePage.#ctor(System.String,System.String)">
      <summary>
            Initialize a new instance of the KryptonStorePage class.
            </summary>
      <param name="uniqueName">UniqueName of the page this is placeholding.</param>
      <param name="storeName">Storage name associated with this page location.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonStorePage.LastVisibleSet">
      <summary>
            As a placeholder this page is never visible.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonStorePage.StoreName">
      <summary>
            Gets the storgate name associated with this page.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel">
      <summary>
            Extends the KryptonPanel to work as a panel for hosting the display of a sliding in/out page.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.SplitterMoveRect">
      <summary>
            Occurs when the separator is about to be moved and requests the rectangle of allowed movement.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.SplitterMoved">
      <summary>
            Occurs when the separator move finishes and a move has occured.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.SplitterMoving">
      <summary>
            Occurs when the separator has moved to a new position.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.PageCloseClicked">
      <summary>
            Occurs when the user clicks the close button for a page.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.PageAutoHiddenClicked">
      <summary>
            Occurs when the user clicks the auto hidden button for a page.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.PageDropDownClicked">
      <summary>
            Occurs when a page requests that a drop down menu be shown.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.AutoHiddenShowingStateChanged">
      <summary>
            Occurs when an auto hidden page showing state changes.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.#ctor(System.Windows.Forms.Control,ComponentFactory.Krypton.Docking.DockingEdge,ComponentFactory.Krypton.Docking.KryptonAutoHiddenPanel)">
      <summary>
            Initialize a new instance of the KryptonAutoHiddenSlidePanel class.
            </summary>
      <param name="control">Reference to control that is being managed.</param>
      <param name="edge">Docking edge being managed.</param>
      <param name="panel">Reference to auto hidden panel for this edge.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.DockspaceControl">
      <summary>
            Gets access to the KryptonDockspace control.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.SeparatorControl">
      <summary>
            Gets access to the KryptonSeparator control.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.Page">
      <summary>
            Gets access to the KryptonPage associated with the slide panel.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.DragPageNotify">
      <summary>
            Gets and sets the drag page notify interface associated with the embedded dockspace.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.HideUniqueName">
      <summary>
            Remove from view any slide out page.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.HideUniqueName(System.String)">
      <summary>
            Remove from view the slide out page if it matches the unique name provided.
            </summary>
      <param name="uniqueName">Unique name of the page to be hidden.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.SlideOut(ComponentFactory.Krypton.Navigator.KryptonPage,ComponentFactory.Krypton.Docking.KryptonAutoHiddenGroup,System.Boolean)">
      <summary>
            Requests the panel slide into view and display the provided page.
            </summary>
      <param name="page">Reference to page for display.</param>
      <param name="group">Reference to auto hidden group that displays the page.</param>
      <param name="select">Should the sliding out page become selected.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.SlideIn">
      <summary>
            Requests the panel slide out of view.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.UpdateSize(System.Int32,System.Int32)">
      <summary>
            Update the size and position of the slide out panel.
            </summary>
      <param name="width">Delta width to apply.</param>
      <param name="height">Delta height to apply.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.PreFilterMessage(System.Windows.Forms.Message@)">
      <summary>
            Filters out a message before it is dispatched.
            </summary>
      <param name="msg">The message to be dispatched. You cannot modify this message. </param>
      <returns>true to filter out; false otherwise.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenSlidePanel.OnLeave(System.EventArgs)">
      <summary>
            Raises the Leave event.
            </summary>
      <param name="e">An EventArgs containing the event data.</param>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage">
      <summary>
            Acts as a proxy for a KryptonPage inside a auto hidden group.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.#ctor(ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Initialize a new instance of the KryptonAutoHiddenProxyPage class.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.Page">
      <summary>
            Gets a reference to the page for which this is a proxy.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.Text">
      <summary>
            Gets and sets the page text.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.TextTitle">
      <summary>
            Gets and sets the title text for the page.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.TextDescription">
      <summary>
            Gets and sets the description text for the page.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.ImageSmall">
      <summary>
            Gets and sets the small image for the page.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.ImageMedium">
      <summary>
            Gets and sets the medium image for the page.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.ImageLarge">
      <summary>
            Gets and sets the large image for the page.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.ToolTipImage">
      <summary>
            Gets and sets the page tooltip image.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.ToolTipImageTransparentColor">
      <summary>
            Gets and sets the tooltip image transparent color.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.ToolTipTitle">
      <summary>
            Gets and sets the page tooltip title text.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.ToolTipBody">
      <summary>
            Gets and sets the page tooltip body text.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.ToolTipStyle">
      <summary>
            Gets and sets the tooltip label style.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.KryptonContextMenu">
      <summary>
            Gets and sets the KryptonContextMenu to show when right clicked.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.UniqueName">
      <summary>
            Gets and sets the unique name of the page.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.GetTextMapping(ComponentFactory.Krypton.Navigator.MapKryptonPageText)">
      <summary>
            Gets the string that matches the mapping request.
            </summary>
      <param name="mapping">Text mapping.</param>
      <returns>Matching string.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.GetImageMapping(ComponentFactory.Krypton.Navigator.MapKryptonPageImage)">
      <summary>
            Gets the image that matches the mapping request.
            </summary>
      <param name="mapping">Image mapping.</param>
      <returns>Image reference.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.Flags">
      <summary>
            Gets and sets the set of page flags.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.SetFlags(ComponentFactory.Krypton.Navigator.KryptonPageFlags)">
      <summary>
            Set all the provided flags to true.
            </summary>
      <param name="flags">Flags to set.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.ClearFlags(ComponentFactory.Krypton.Navigator.KryptonPageFlags)">
      <summary>
            Sets all the provided flags to false.
            </summary>
      <param name="flags">Flags to set.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.AreFlagsSet(ComponentFactory.Krypton.Navigator.KryptonPageFlags)">
      <summary>
            Are all the provided flags set to true.
            </summary>
      <param name="flags">Flags to test.</param>
      <returns>True if all provided flags are defined as true; otherwise false.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonAutoHiddenProxyPage.LastVisibleSet">
      <summary>
            Gets the last value set to the Visible property.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockableWorkspace">
      <summary>
            Extends the KryptonWorkspace to work within the docking framework.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockableWorkspace.#ctor">
      <summary>
            Initialize a new instance of the KryptonDockableWorkspace class.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockableWorkspace.ToString">
      <summary>
            Gets a string representation of the instance.
            </summary>
      <returns>String.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockableWorkspace.ApplyDockingAppearance">
      <summary>
            Gets a value indicating if docking specific appearance should be applied.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockableWorkspace.ApplyDockingCloseAction">
      <summary>
            Gets a value indicating if docking specific close action should be applied.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockableWorkspace.ApplyDockingPinAction">
      <summary>
            Gets a value indicating if docking specific pin actions should be applied.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockableWorkspace.ApplyDockingDropDownAction">
      <summary>
            Gets a value indicating if docking specific drop down actions should be applied.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockableWorkspace.NewCellInitialize(ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell)">
      <summary>
            Initialize a new cell.
            </summary>
      <param name="cell">Cell being added to the control.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockableWorkspace.OnActiveCellChanged(ComponentFactory.Krypton.Workspace.ActiveCellChangedEventArgs)">
      <summary>
            Raises the ActiveCellChanged event.
            </summary>
      <param name="e">An ActiveCellChangedEventArgs containing the event data.</param>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockspaceSeparator">
      <summary>
            Extends the KryptonSeparator so work between dockspace entries on a control edge.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockspaceSeparator.#ctor(ComponentFactory.Krypton.Docking.DockingEdge,System.Boolean)">
      <summary>
            Initialize a new instance of the KryptonDockspaceSeparator class.
            </summary>
      <param name="edge">Docking edge the separator is against.</param>
      <param name="opposite">Should the separator be docked against the opposite edge.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockspaceSeparator.ToString">
      <summary>
            Gets a string representation of the class.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonSpace">
      <summary>
            Extends the KryptonWorkspace with common functionality shared by various docking implementations.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonSpace.CellToCachedState">
      <summary>
            Lookup between a cell and the cell state.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonSpace.CachedCellState">
      <summary>
            State cached per-cell within the workspace.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonSpace.CachedCellState.Cell">
      <summary>
            Gets and sets the workspace cell for which this state relates.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonSpace.CachedCellState.FocusState">
      <summary>
            Gets and sets the focus state of the cell.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonSpace.CachedCellState.SelectedPage">
      <summary>
            Gets and sets the selected page.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonSpace.CachedCellState.CloseButtonSpec">
      <summary>
            Gets and sets the button spec used to represent a close button.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonSpace.CachedCellState.PinButtonSpec">
      <summary>
            Gets and sets the button spec used to represent a pin button.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonSpace.CachedCellState.DropDownButtonSpec">
      <summary>
            Gets and sets the button spec used to represent a drop down button.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonSpace.CellGainsFocus">
      <summary>
            Occurs when the focus moves to be inside the KryptonWorkspaceCell instance.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonSpace.CellLosesFocus">
      <summary>
            Occurs when the focus moves away from inside the KryptonWorkspaceCell instance.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonSpace.CellPageInserting">
      <summary>
            Occurs when a page is being inserted into a cell.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonSpace.PageCloseClicked">
      <summary>
            Occurs when a page requests that it be closed.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonSpace.PageAutoHiddenClicked">
      <summary>
            Occurs when a page requests that it be auto hidden state switched.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonSpace.PageDropDownClicked">
      <summary>
            Occurs when a page requests that a drop down menu be shown.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonSpace.PagesDoubleClicked">
      <summary>
            Occurs when a page or set of pages have been double clicked.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonSpace.#ctor(System.String)">
      <summary>
            Initialize a new instance of the KryptonSpace class.
            </summary>
      <param name="storeName">Name to associate with store pages.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonSpace.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonSpace.CloseTooltip">
      <summary>
            Gets and sets the tooltip used for the close button.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonSpace.PinTooltip">
      <summary>
            Gets and sets the tooltip used for the pin button.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonSpace.DropDownTooltip">
      <summary>
            Gets and sets the tooltips used for the drop down button.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonSpace.AutoHiddenHost">
      <summary>
            Gets the button spec type for the pin button.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonSpace.UpdateVisible">
      <summary>
            Requests the visible state be updated.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonSpace.UpdateVisible(System.Boolean)">
      <summary>
            Requests the visible state be updated.
            </summary>
      <param name="focus">Should the current cell be given the focus.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonSpace.WritePageElement(System.Xml.XmlWriter,ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Write page details to xml during save process.
            </summary>
      <param name="xmlWriter">XmlWriter to use for saving.</param>
      <param name="page">Reference to page.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonSpace.ReadPageElement(System.Xml.XmlReader,System.String,ComponentFactory.Krypton.Navigator.UniqueNameToPage)">
      <summary>
            Read page details from xml during load process.
            </summary>
      <param name="xmlReader">XmlReader to use for loading.</param>
      <param name="uniqueName">Unique name of page being loaded.</param>
      <param name="existingPages">Set of existing pages.</param>
      <returns>Reference to page to be added into the workspace cell.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonSpace.ApplyDockingAppearance">
      <summary>
            Gets a value indicating if docking specific appearance should be applied.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonSpace.ApplyDockingCloseAction">
      <summary>
            Gets a value indicating if docking specific close action should be applied.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonSpace.ApplyDockingPinAction">
      <summary>
            Gets a value indicating if docking specific pin actions should be applied.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonSpace.ApplyDockingDropDownAction">
      <summary>
            Gets a value indicating if docking specific drop down actions should be applied.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonSpace.ApplyDockingVisibility">
      <summary>
            Gets a value indicating if docking specific visible changes should be applied.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonSpace.OnCellGainsFocus(ComponentFactory.Krypton.Workspace.WorkspaceCellEventArgs)">
      <summary>
            Raises the CellGainsFocus event.
            </summary>
      <param name="e">An WorkspaceCellEventArgs containing the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonSpace.OnCellLosesFocus(ComponentFactory.Krypton.Workspace.WorkspaceCellEventArgs)">
      <summary>
            Raises the CellLosesFocus event.
            </summary>
      <param name="e">An WorkspaceCellEventArgs containing the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonSpace.OnCellPageInserting(ComponentFactory.Krypton.Navigator.KryptonPageEventArgs)">
      <summary>
            Raises the CellPageInserting event.
            </summary>
      <param name="e">An KryptonPageEventArgs containing the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonSpace.OnPageCloseClicked(ComponentFactory.Krypton.Docking.UniqueNameEventArgs)">
      <summary>
            Raises the PageCloseClicked event.
            </summary>
      <param name="e">An UniqueNameEventArgs containing the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonSpace.OnPageAutoHiddenClicked(ComponentFactory.Krypton.Docking.UniqueNameEventArgs)">
      <summary>
            Raises the PageAutoHiddenClicked event.
            </summary>
      <param name="e">An UniqueNameEventArgs containing the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonSpace.OnPageDropDownClicked(ComponentFactory.Krypton.Docking.CancelDropDownEventArgs)">
      <summary>
            Raises the PageDropDownClicked event.
            </summary>
      <param name="e">An CancelDropDownEventArgs containing the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonSpace.OnPagesDoubleClicked(ComponentFactory.Krypton.Docking.UniqueNamesEventArgs)">
      <summary>
            Raises the PagesDoubleClicked event.
            </summary>
      <param name="e">An UniqueNamesEventArgs containing the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonSpace.NewCellInitialize(ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell)">
      <summary>
            Initialize a new cell.
            </summary>
      <param name="cell">Cell being added to the control.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonSpace.ExistingCellDetach(ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell)">
      <summary>
            Detach an existing cell.
            </summary>
      <param name="cell">Cell being removed from the control.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonSpace.UpdateCellActions(ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell,ComponentFactory.Krypton.Docking.KryptonSpace.CachedCellState)">
      <summary>
            Update the cell settings to reflect the provided page, cell and page flag settings.
            </summary>
      <param name="cell">Reference to workspace cell that needs updating.</param>
      <param name="cellState">Reference to cell specific cached state.</param>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonFloatspace">
      <summary>
            Extends the KryptonWorkspace to work within the docking floating window.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonFloatspace.#ctor">
      <summary>
            Initialize a new instance of the KryptonFloatspace class.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonFloatspace.ToString">
      <summary>
            Gets a string representation of the class.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonFloatspace.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonFloatspace.ApplyDockingPinAction">
      <summary>
            Gets a value indicating if docking specific pin actions should be applied.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonFloatingWindow">
      <summary>
            Extends the KryptonForm to act as a floating window within the docking framework.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonFloatingWindow.WindowCloseClicked">
      <summary>
            Occurs when the window close is requested and provides the set of pages visible.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonFloatingWindow.WindowCaptionDragging">
      <summary>
            Occurs when the window needs to be drag and dropped by its caption.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonFloatingWindow.#ctor(System.Windows.Forms.Form,ComponentFactory.Krypton.Docking.KryptonFloatspace)">
      <summary>
            Initialize a new instance of the KryptonFloatingWindow class.
            </summary>
      <param name="owner">Reference to form that will own all the floating window.</param>
      <param name="floatspace">Reference to owning floatspace instance.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonFloatingWindow.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonFloatingWindow.FloatspaceControl">
      <summary>
            Gets access to the contained KryptonFloatspace control.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonFloatingWindow.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Processes Windows messages.
            </summary>
      <param name="m">The Windows Message to process. </param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonFloatingWindow.OnWindowCloseClicked(ComponentFactory.Krypton.Docking.UniqueNamesEventArgs)">
      <summary>
            Raises the WindowCloseClicked event.
            </summary>
      <param name="e">An UniqueNamesEventArgs that contains the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonFloatingWindow.OnWindowCaptionDragging(ComponentFactory.Krypton.Docking.ScreenAndOffsetEventArgs)">
      <summary>
            Raises the WindowCaptionDragging event.
            </summary>
      <param name="e">An ScreenAndOffsetEventArgs that contains the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonFloatingWindow.OnLoad(System.EventArgs)">
      <summary>
            Raises the Load event.
            </summary>
      <param name="e">An EventArgs that contains the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonFloatingWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>
            Raises the Closing event.
            </summary>
      <param name="e">An CancelEventArgs that contains the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonFloatingWindow.OnActivated(System.EventArgs)">
      <summary>
            Raises the Activated event.
            </summary>
      <param name="e">An EventArgs containing the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonFloatingWindow.OnDeactivate(System.EventArgs)">
      <summary>
            Raises the Deactivate event.
            </summary>
      <param name="e">An EventArgs containing the event data.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonFloatingWindow.FloatingMessages">
      <summary>
            Gets and sets the floating messages interface.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonAutoHiddenPanel">
      <summary>
            Extends the KryptonPanel to work as a panel for hosting KryptonAutoHiddenGroup controls.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenPanel.#ctor(ComponentFactory.Krypton.Docking.DockingEdge)">
      <summary>
            Initialize a new instance of the KryptonAutoHiddenPanel class.
            </summary>
      <param name="edge">Docking edge being managed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenPanel.GetPreferredSize(System.Drawing.Size)">
      <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonAutoHiddenGroup">
      <summary>
            Extends the KryptonNavigator to work as a docking auto hidden group control.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonAutoHiddenGroup.StoringPage">
      <summary>
            Occurs when a page is becoming stored.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenGroup.#ctor(ComponentFactory.Krypton.Docking.DockingEdge)">
      <summary>
            Initialize a new instance of the KryptonAutoHiddenGroup class.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenGroup.StoreAllPages">
      <summary>
            Convert all pages into store placeholders.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenGroup.StorePages(System.String[])">
      <summary>
            Convert the named pages into store placeholders.
            </summary>
      <param name="uniqueNames">Array of page names.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenGroup.RestorePages(ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Convert matching placeholders into actual pages.
            </summary>
      <param name="pages">Array of pages to restore.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenGroup.OnStoringPage(ComponentFactory.Krypton.Docking.UniqueNameEventArgs)">
      <summary>
            Raises the StoringPage event.
            </summary>
      <param name="e">An StorePageEventArgs containing the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonAutoHiddenGroup.OnTabCountChanged(System.EventArgs)">
      <summary>
            Raises the TabCountChanged event.
            </summary>
      <param name="e">An EventArgs containing the event args.</param>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockspace">
      <summary>
            Extends the KryptonWorkspace to work within the docking edge of a control.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockspace.#ctor">
      <summary>
            Initialize a new instance of the KryptonDockspace class.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockspace.ToString">
      <summary>
            Gets a string representation of the class.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingDragTargetProvider">
      <summary>
            Provides the set of drag targets relevent to the set of pages being moved.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingDragTargetProvider.#ctor(ComponentFactory.Krypton.Docking.KryptonDockingManager,ComponentFactory.Krypton.Docking.KryptonFloatingWindow,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Initialize a new instance of the DragTargetNull class.
            </summary>
      <param name="manager">Reference to docking manager.</param>
      <param name="floatingWindow">Reference to window being dragged.</param>
      <param name="pages">Reference to collection of pages to drag.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingDragTargetProvider.GenerateDragTargets(ComponentFactory.Krypton.Navigator.PageDragEndData)">
      <summary>
            Generate a list of drag targets that are relevant to the provided end data.
            </summary>
      <param name="dragEndData">Pages data being dragged.</param>
      <returns>List of drag targets.</returns>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingDragManager">
      <summary>
            Manage a docking dragging operation.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingDragManager.#ctor(ComponentFactory.Krypton.Docking.KryptonDockingManager,System.Windows.Forms.Control)">
      <summary>
            Initialize a new instance of the DockingDragManager class.
            </summary>
      <param name="manager">Reference to manager creating this instance.</param>
      <param name="c">Control that is starting the drag operation.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingDragManager.Dispose(System.Boolean)">
      <summary>
            Release unmanaged and optionally managed resources.
            </summary>
      <param name="disposing">Called from Dispose method.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingDragManager.FloatingWindow">
      <summary>
            Gets and sets the window that is moved in sync with the mouse movement.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingDragManager.FloatingWindowOffset">
      <summary>
            Gets and sets the offset of the floating window from the screen cursor.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingDragManager.DragStart(System.Drawing.Point,ComponentFactory.Krypton.Navigator.PageDragEndData)">
      <summary>
            Occurs when dragging starts.
            </summary>
      <param name="screenPt">Mouse screen point at start of drag.</param>
      <param name="dragEndData">Data to be dropped at destination.</param>
      <returns>True if dragging waas started; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingDragManager.DragMove(System.Drawing.Point)">
      <summary>
            Occurs on dragging movement.
            </summary>
      <param name="screenPt">Latest screen point during dragging.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingDragManager.DragEnd(System.Drawing.Point)">
      <summary>
            Occurs when dragging ends because of dropping.
            </summary>
      <param name="screenPt">Ending screen point when dropping.</param>
      <returns>Drop was performed and the source can perform any removal of pages as required.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingDragManager.DragQuit">
      <summary>
            Occurs when dragging quits.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingDragManager.OnKEYDOWN(System.Windows.Forms.Message@)">
      <summary>
            Processes the WM_KEYDOWN from the floating window.
            </summary>
      <returns>True to eat message; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingDragManager.OnMOUSEMOVE">
      <summary>
            Processes the WM_MOUSEMOVE from the floating window.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingDragManager.OnLBUTTONUP">
      <summary>
            Processes the WM_LBUTTONUP from the floating window.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingDragManager.PreFilterMessage(System.Windows.Forms.Message@)">
      <summary>
            Filters out a message before it is dispatched.
            </summary>
      <param name="m">The message to be dispatched.</param>
      <returns>true to filter the message and stop it from being dispatched.</returns>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DragTargetNull">
      <summary>
            Target that never matches and so acts as a null drag target.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DragTargetNull.#ctor">
      <summary>
            Initialize a new instance of the DragTargetNull class.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DragTargetNull.PerformDrop(System.Drawing.Point,ComponentFactory.Krypton.Navigator.PageDragEndData)">
      <summary>
            Perform the drop action associated with the target.
            </summary>
      <param name="screenPt">Position in screen coordinates.</param>
      <param name="data">Data to pass to the target to process drop.</param>
      <returns>Drop was performed and the source can perform any removal of pages as required.</returns>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DragTargetControlEdge">
      <summary>
            Target one of the four sides of a docking control.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DragTargetControlEdge.#ctor(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Rectangle,ComponentFactory.Krypton.Navigator.DragTargetHint,ComponentFactory.Krypton.Docking.KryptonDockingControl,ComponentFactory.Krypton.Navigator.KryptonPageFlags,System.Boolean)">
      <summary>
            Initialize a new instance of the DragTargetControlEdge class.
            </summary>
      <param name="screenRect">Rectangle for screen area.</param>
      <param name="hotRect">Rectangle for hot area.</param>
      <param name="drawRect">Rectangle for draw area.</param>
      <param name="hint">Target hint which should be one of the edges.</param>
      <param name="controlElement">Workspace instance that contains cell.</param>
      <param name="allowFlags">Only drop pages that have one of these flags defined.</param>
      <param name="outsideEdge">Add to the outside edge (otherwise the inner edge).</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DragTargetControlEdge.Dispose(System.Boolean)">
      <summary>
            Release unmanaged and optionally managed resources.
            </summary>
      <param name="disposing">Called from Dispose method.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DragTargetControlEdge.Edge">
      <summary>
            Gets the dragging edge.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DragTargetControlEdge.ControlElement">
      <summary>
            Gets the target docking element.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DragTargetControlEdge.IsMatch(System.Drawing.Point,ComponentFactory.Krypton.Navigator.PageDragEndData)">
      <summary>
            Is this target a match for the provided screen position.
            </summary>
      <param name="screenPt">Position in screen coordinates.</param>
      <param name="dragEndData">Data to be dropped at destination.</param>
      <returns>True if a match; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DragTargetControlEdge.PerformDrop(System.Drawing.Point,ComponentFactory.Krypton.Navigator.PageDragEndData)">
      <summary>
            Perform the drop action associated with the target.
            </summary>
      <param name="screenPt">Position in screen coordinates.</param>
      <param name="data">Data to pass to the target to process drop.</param>
      <returns>Drop was performed and the source can perform any removal of pages as required.</returns>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingElementClosedCollection">
      <summary>
            Extends base functionality by allowing a collection of child docking elements.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElementClosedCollection.#ctor(System.String)">
      <summary>
            Initialize a new instance of the DockingElementClosedCollection class.
            </summary>
      <param name="name">Initial name of the element.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingElementClosedCollection.Count">
      <summary>
            Gets the number of child docking elements.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingElementClosedCollection.Item(System.Int32)">
      <summary>
            Gets the docking element at the specified index.
            </summary>
      <param name="index">Index.</param>
      <returns>Docking element at specified index.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingElementClosedCollection.Item(System.String)">
      <summary>
            Gets the docking element with the specified name.
            </summary>
      <param name="name">Name of element.</param>
      <returns>Docking element with specified name.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElementClosedCollection.GetEnumerator">
      <summary>
            Shallow enumerate over child docking elements.
            </summary>
      <returns>Enumerator instance.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElementClosedCollection.Contains(ComponentFactory.Krypton.Docking.IDockingElement)">
      <summary>
            Determines whether the collection contains the docking element.
            </summary>
      <param name="item">IDockingElement reference.</param>
      <returns>True if view found; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElementClosedCollection.InternalAdd(ComponentFactory.Krypton.Docking.IDockingElement)">
      <summary>
            Append a docking element to the collection.
            </summary>
      <param name="item">IDockingElement reference.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElementClosedCollection.InternalInsert(System.Int32,ComponentFactory.Krypton.Docking.IDockingElement)">
      <summary>
            Insert a docking element to the collection.
            </summary>
      <param name="index">Insertion index.</param>
      <param name="item">IDockingElement reference.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElementClosedCollection.InternalRemove(ComponentFactory.Krypton.Docking.IDockingElement)">
      <summary>
            Removes first occurance of specified docking element.
            </summary>
      <param name="item">IDockingElement reference.</param>
      <returns>True if removed; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElementClosedCollection.InternalClear">
      <summary>
            Remove all docking elements from the collection.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingElementOpenCollection">
      <summary>
            Extends base functionality by allowing a collection of child docking elements.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElementOpenCollection.#ctor(System.String)">
      <summary>
            Initialize a new instance of the DockingElementOpenCollection class.
            </summary>
      <param name="name">Initial name of the element.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElementOpenCollection.Add(ComponentFactory.Krypton.Docking.IDockingElement)">
      <summary>
            Append a docking element to the collection.
            </summary>
      <param name="item">IDockingElement reference.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElementOpenCollection.Insert(System.Int32,ComponentFactory.Krypton.Docking.IDockingElement)">
      <summary>
            Append a docking element to the collection.
            </summary>
      <param name="index">Insert index.</param>
      <param name="item">IDockingElement reference.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElementOpenCollection.Remove(ComponentFactory.Krypton.Docking.IDockingElement)">
      <summary>
            Removes first occurance of specified docking element.
            </summary>
      <param name="item">IDockingElement reference.</param>
      <returns>True if removed; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElementOpenCollection.Clear">
      <summary>
            Remove all docking elements from the collection.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingElement">
      <summary>
            Implements base docking element functionality.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.#ctor(System.String)">
      <summary>
            Initialize a new instance of the DockingElement class.
            </summary>
      <param name="name">Initial name of the element.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingElement.Name">
      <summary>
            Gets and sets the name of the docking element.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingElement.Path">
      <summary>
            Gets a comma separated list of names leading to this element.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.ResolvePath(System.String)">
      <summary>
            Resolve the provided path.
            </summary>
      <param name="path">Comma separated list of names to resolve.</param>
      <returns>IDockingElement reference if path was resolved with success; otherwise null.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingElement.Parent">
      <summary>
            Gets and sets access to the parent docking element.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.PropogateAction(ComponentFactory.Krypton.Docking.DockingPropogateAction,System.String[])">
      <summary>
            Propagates an action request down the hierarchy of docking elements.
            </summary>
      <param name="action">Action that is requested to be performed.</param>
      <param name="uniqueNames">Array of unique names of the pages the action relates to.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.PropogateAction(ComponentFactory.Krypton.Docking.DockingPropogateAction,ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Propagates an action request down the hierarchy of docking elements.
            </summary>
      <param name="action">Action that is requested to be performed.</param>
      <param name="pages">Array of pages the action relates to.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.PropogateAction(ComponentFactory.Krypton.Docking.DockingPropogateAction,System.Int32)">
      <summary>
            Propagates an action request down the hierarchy of docking elements.
            </summary>
      <param name="action">Action that is requested to be performed.</param>
      <param name="value">Integer value associated with the request.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.PropogateBoolState(ComponentFactory.Krypton.Docking.DockingPropogateBoolState,System.String)">
      <summary>
            Propagates a boolean state request down the hierarchy of docking elements.
            </summary>
      <param name="state">Boolean state that is requested to be recovered.</param>
      <param name="uniqueName">Unique name of the page the request relates to.</param>
      <returns>True/False if state is known; otherwise null indicating no information available.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.PropogateIntState(ComponentFactory.Krypton.Docking.DockingPropogateIntState,System.Int32@)">
      <summary>
            Propagates an integer state request down the hierarchy of docking elements.
            </summary>
      <param name="state">Integer state that is requested to be recovered.</param>
      <param name="value">Value discovered from matching </param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.PropogatePageState(ComponentFactory.Krypton.Docking.DockingPropogatePageState,System.String)">
      <summary>
            Propagates a page request down the hierarchy of docking elements.
            </summary>
      <param name="state">Request that should result in a page reference if found.</param>
      <param name="uniqueName">Unique name of the page the request relates to.</param>
      <returns>Reference to page that matches the request; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.PropogatePageList(ComponentFactory.Krypton.Docking.DockingPropogatePageList,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Propagates a page list request down the hierarchy of docking elements.
            </summary>
      <param name="state">Request that should result in pages collection being modified.</param>
      <param name="pages">Pages collection for modification by the docking elements.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.PropogateCellList(ComponentFactory.Krypton.Docking.DockingPropogateCellList,ComponentFactory.Krypton.Workspace.KryptonWorkspaceCellList)">
      <summary>
            Propagates a workspace cell list request down the hierarchy of docking elements.
            </summary>
      <param name="state">Request that should result in the cells collection being modified.</param>
      <param name="cells">Cells collection for modification by the docking elements.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.PropogateDragTargets(ComponentFactory.Krypton.Docking.KryptonFloatingWindow,ComponentFactory.Krypton.Navigator.PageDragEndData,ComponentFactory.Krypton.Navigator.DragTargetList)">
      <summary>
            Propagates a request for drag targets down the hierarchy of docking elements.
            </summary>
      <param name="floatingWindow">Reference to window being dragged.</param>
      <param name="dragData">Set of pages being dragged.</param>
      <param name="targets">Collection of drag targets.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.FindPageLocation(System.String)">
      <summary>
            Find the docking location of the named page.
            </summary>
      <param name="uniqueName">Unique name of the page.</param>
      <returns>Enumeration value indicating docking location.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.FindPageElement(System.String)">
      <summary>
            Find the docking element that contains the named page.
            </summary>
      <param name="uniqueName">Unique name of the page.</param>
      <returns>IDockingElement reference if page is found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.FindStorePageElement(ComponentFactory.Krypton.Docking.DockingLocation,System.String)">
      <summary>
            Find the docking element that contains the location specific store page for the named page.
            </summary>
      <param name="location">Location to be searched.</param>
      <param name="uniqueName">Unique name of the page to be found.</param>
      <returns>IDockingElement reference if store page is found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.FindDockingFloating(System.String)">
      <summary>
            Find a floating docking element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable floating element is required.</param>
      <returns>KryptonDockingFloating reference if found; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.FindDockingEdgeDocked(System.String)">
      <summary>
            Find a edge docked element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable docking edge element is required.</param>
      <returns>KryptonDockingEdgeDocked reference if found; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.FindDockingEdgeAutoHidden(System.String)">
      <summary>
            Find a edge auto hidden element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable auto hidden edge element is required.</param>
      <returns>KryptonDockingEdgeAutoHidden reference if found; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.FindDockingWorkspace(System.String)">
      <summary>
            Find a workspace element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable workspace element is required.</param>
      <returns>KryptonDockingWorkspace reference if found; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.FindDockingNavigator(System.String)">
      <summary>
            Find a navigator element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable navigator element is required.</param>
      <returns>KryptonDockingNavigator reference if found; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.SaveElementToXml(System.Xml.XmlWriter)">
      <summary>
            Saves docking configuration information using a provider xml writer.
            </summary>
      <param name="xmlWriter">Xml writer object.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.LoadElementFromXml(System.Xml.XmlReader,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Loads docking configuration information using a provider xml reader.
            </summary>
      <param name="xmlReader">Xml reader object.</param>
      <param name="pages">Collection of available pages for adding.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.DemandPagesNotBePresent(ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Checks that the provided set of pages are not already present in the docking hierarchy.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
      </exception>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.DemandDockingManager">
      <summary>
            Checks that this element has access to a docking manager, throwing exception if not.
            </summary>
      <exception cref="T:System.ApplicationException">
      </exception>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingElement.HasDockManager">
      <summary>
            Returns a value indicating if this docking element has access to a parent docking manager.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingElement.DockingManager">
      <summary>
            Finds the KryptonDockingManager instance that owns this part of the docking hierarchy.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.GetParentType(System.Type)">
      <summary>
            Search up the parent chain looking for the specified type of object.
            </summary>
      <param name="findType">Type of the instance we are searching for.</param>
      <returns>Object reference if found and it implements IDockingElement; otherwise null.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingElement.Count">
      <summary>
            Gets the number of child docking elements.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingElement.Item(System.Int32)">
      <summary>
            Gets the docking element at the specified index.
            </summary>
      <param name="index">Index.</param>
      <returns>Docking element at specified index.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingElement.Item(System.String)">
      <summary>
            Gets the docking element with the specified name.
            </summary>
      <param name="name">Name of element.</param>
      <returns>Docking element with specified name.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.GetEnumerator">
      <summary>
            Shallow enumerate over child docking elements.
            </summary>
      <returns>Enumerator instance.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Enumerate using non-generic interface.
            </summary>
      <returns>Enumerator instance.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingElement.XmlElementName">
      <summary>
            Gets the xml element name to use when saving.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.LoadDockingElement(System.Xml.XmlReader,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Perform docking element specific actions based on the loading xml.
            </summary>
      <param name="xmlReader">Xml reader object.</param>
      <param name="pages">Collection of available pages.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingElement.LoadChildDockingElement(System.Xml.XmlReader,ComponentFactory.Krypton.Navigator.KryptonPageCollection,ComponentFactory.Krypton.Docking.IDockingElement)">
      <summary>
            Perform docking element specific actions for loading a child xml.
            </summary>
      <param name="xmlReader">Xml reader object.</param>
      <param name="pages">Collection of available pages.</param>
      <param name="child">Optional reference to existing child docking element.</param>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockingNavigator">
      <summary>
            Provides docking functionality by attaching to an existing KryptonDockableNavigator
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.#ctor(System.String)">
      <summary>
            Initialize a new instance of the KryptonDockingNavigator class.
            </summary>
      <param name="name">Initial name of the element.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.#ctor(System.String,System.String,ComponentFactory.Krypton.Docking.KryptonDockableNavigator)">
      <summary>
            Initialize a new instance of the KryptonDockingNavigator class.
            </summary>
      <param name="name">Initial name of the element.</param>
      <param name="storeName">Name to use for storage pages.</param>
      <param name="navigator">Reference to navigator to manage.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.DockableNavigatorControl">
      <summary>
            Gets the control this element is managing.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.Parent">
      <summary>
            Gets and sets access to the parent docking element.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.Append(ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Add a KryptonPage to the navigator.
            </summary>
      <param name="page">KryptonPage to be added.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.Append(ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Add a KryptonPage array to the navigator.
            </summary>
      <param name="pages">Array of KryptonPage instances to be added.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.ShowPage(ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Show all display elements of the provided page.
            </summary>
      <param name="page">Reference to page that should be shown.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.ShowPage(System.String)">
      <summary>
            Show all display elements of the provided page.
            </summary>
      <param name="uniqueName">Unique name of the page that should be shown.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.ShowPages(ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Show all display elements of the provided pages.
            </summary>
      <param name="pages">Array of references to pages that should be shown.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.ShowPages(System.String[])">
      <summary>
            Show all display elements of the provided pages.
            </summary>
      <param name="uniqueNames">Array of unique names of the pages that should be shown.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.ShowAllPages">
      <summary>
            Show all display elements of all pages.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.HidePage(ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Hide all display elements of the provided page.
            </summary>
      <param name="page">Reference to page that should be hidden.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.HidePage(System.String)">
      <summary>
            Hide all display elements of the provided page.
            </summary>
      <param name="uniqueName">Unique name of the page that should be hidden.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.HidePages(ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Hide all display elements of the provided pages.
            </summary>
      <param name="pages">Array of references to pages that should be hidden.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.HidePages(System.String[])">
      <summary>
            Hide all display elements of the provided pages.
            </summary>
      <param name="uniqueNames">Array of unique names of the pages that should be hidden.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.HideAllPages">
      <summary>
            Hide all display elements of all pages.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.RemovePage(System.String,System.Boolean)">
      <summary>
            Remove the named page.
            </summary>
      <param name="uniqueName">Unique name of the page that should be removed.</param>
      <param name="disposePage">Should the page be disposed when removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.RemovePages(ComponentFactory.Krypton.Navigator.KryptonPage[],System.Boolean)">
      <summary>
            Remove the referenced pages.
            </summary>
      <param name="pages">Array of references to pages that should be removed.</param>
      <param name="disposePage">Should the page be disposed when removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.RemovePages(System.String[],System.Boolean)">
      <summary>
            Remove the named pages.
            </summary>
      <param name="uniqueNames">Array of unique names of the pages that should be removed.</param>
      <param name="disposePage">Should the page be disposed when removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.RemoveAllPages(System.Boolean)">
      <summary>
            Remove all pages.
            </summary>
      <param name="disposePage">Should the page be disposed when removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.PropogateAction(ComponentFactory.Krypton.Docking.DockingPropogateAction,System.String[])">
      <summary>
            Propagates an action request down the hierarchy of docking elements.
            </summary>
      <param name="action">Action that is requested to be performed.</param>
      <param name="uniqueNames">Array of unique names of the pages the action relates to.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.PropogateBoolState(ComponentFactory.Krypton.Docking.DockingPropogateBoolState,System.String)">
      <summary>
            Propagates a boolean state request down the hierarchy of docking elements.
            </summary>
      <param name="state">Boolean state that is requested to be recovered.</param>
      <param name="uniqueName">Unique name of the page the request relates to.</param>
      <returns>True/False if state is known; otherwise null indicating no information available.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.PropogatePageState(ComponentFactory.Krypton.Docking.DockingPropogatePageState,System.String)">
      <summary>
            Propagates a page request down the hierarchy of docking elements.
            </summary>
      <param name="state">Request that should result in a page reference if found.</param>
      <param name="uniqueName">Unique name of the page the request relates to.</param>
      <returns>Reference to page that matches the request; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.PropogatePageList(ComponentFactory.Krypton.Docking.DockingPropogatePageList,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Propagates a page list request down the hierarchy of docking elements.
            </summary>
      <param name="state">Request that should result in pages collection being modified.</param>
      <param name="pages">Pages collection for modification by the docking elements.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.PropogateDragTargets(ComponentFactory.Krypton.Docking.KryptonFloatingWindow,ComponentFactory.Krypton.Navigator.PageDragEndData,ComponentFactory.Krypton.Navigator.DragTargetList)">
      <summary>
            Propagates a request for drag targets down the hierarchy of docking elements.
            </summary>
      <param name="floatingWindow">Reference to window being dragged.</param>
      <param name="dragData">Set of pages being dragged.</param>
      <param name="targets">Collection of drag targets.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.FindPageLocation(System.String)">
      <summary>
            Find the docking location of the named page.
            </summary>
      <param name="uniqueName">Unique name of the page.</param>
      <returns>Enumeration value indicating docking location.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.FindPageElement(System.String)">
      <summary>
            Find the docking element that contains the named page.
            </summary>
      <param name="uniqueName">Unique name of the page.</param>
      <returns>IDockingElement reference if page is found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.FindStorePageElement(ComponentFactory.Krypton.Docking.DockingLocation,System.String)">
      <summary>
            Find the docking element that contains the location specific store page for the named page.
            </summary>
      <param name="location">Location to be searched.</param>
      <param name="uniqueName">Unique name of the page to be found.</param>
      <returns>IDockingElement reference if store page is found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.FindDockingNavigator(System.String)">
      <summary>
            Find a navigator element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable navigator element is required.</param>
      <returns>KryptonDockingNavigator reference if found; otherwise false.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.VisiblePages">
      <summary>
            Gets the number of visible pages.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.SelectPage(System.String)">
      <summary>
            Ensure the provided page is selected within the cell that contains it.
            </summary>
      <param name="uniqueName">Unique name to be selected.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.SaveElementToXml(System.Xml.XmlWriter)">
      <summary>
            Saves docking configuration information using a provider xml writer.
            </summary>
      <param name="xmlWriter">Xml writer object.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.LoadElementFromXml(System.Xml.XmlReader,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Loads docking configuration information using a provider xml reader.
            </summary>
      <param name="xmlReader">Xml reader object.</param>
      <param name="pages">Collection of available pages for adding.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingNavigator.XmlElementName">
      <summary>
            Gets the xml element name to use when saving.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace">
      <summary>
            Provides docking functionality by attaching to an existing KryptonDockableWorkspace
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.#ctor(System.String)">
      <summary>
            Initialize a new instance of the KryptonDockingWorkspace class.
            </summary>
      <param name="name">Initial name of the element.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.#ctor(System.String,System.String,ComponentFactory.Krypton.Docking.KryptonDockableWorkspace)">
      <summary>
            Initialize a new instance of the KryptonDockingWorkspace class.
            </summary>
      <param name="name">Initial name of the element.</param>
      <param name="storeName">Name to use for storage pages.</param>
      <param name="workspace">Reference to workspace to manage.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.DockableWorkspaceControl">
      <summary>
            Gets the control this element is managing.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.Parent">
      <summary>
            Gets and sets access to the parent docking element.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.ShowPage(ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Show all display elements of the provided page.
            </summary>
      <param name="page">Reference to page that should be shown.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.ShowPage(System.String)">
      <summary>
            Show all display elements of the provided page.
            </summary>
      <param name="uniqueName">Unique name of the page that should be shown.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.ShowPages(ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Show all display elements of the provided pages.
            </summary>
      <param name="pages">Array of references to pages that should be shown.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.ShowPages(System.String[])">
      <summary>
            Show all display elements of the provided pages.
            </summary>
      <param name="uniqueNames">Array of unique names of the pages that should be shown.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.ShowAllPages">
      <summary>
            Show all display elements of all pages.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.HidePage(ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Hide all display elements of the provided page.
            </summary>
      <param name="page">Reference to page that should be hidden.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.HidePage(System.String)">
      <summary>
            Hide all display elements of the provided page.
            </summary>
      <param name="uniqueName">Unique name of the page that should be hidden.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.HidePages(ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Hide all display elements of the provided pages.
            </summary>
      <param name="pages">Array of references to pages that should be hidden.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.HidePages(System.String[])">
      <summary>
            Hide all display elements of the provided pages.
            </summary>
      <param name="uniqueNames">Array of unique names of the pages that should be hidden.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.HideAllPages">
      <summary>
            Hide all display elements of all pages.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.RemovePage(System.String,System.Boolean)">
      <summary>
            Remove the named page.
            </summary>
      <param name="uniqueName">Unique name of the page that should be removed.</param>
      <param name="disposePage">Should the page be disposed when removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.RemovePages(ComponentFactory.Krypton.Navigator.KryptonPage[],System.Boolean)">
      <summary>
            Remove the referenced pages.
            </summary>
      <param name="pages">Array of references to pages that should be removed.</param>
      <param name="disposePage">Should the page be disposed when removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.RemovePages(System.String[],System.Boolean)">
      <summary>
            Remove the named pages.
            </summary>
      <param name="uniqueNames">Array of unique names of the pages that should be removed.</param>
      <param name="disposePage">Should the page be disposed when removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.RemoveAllPages(System.Boolean)">
      <summary>
            Remove all pages.
            </summary>
      <param name="disposePage">Should the page be disposed when removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.PropogateAction(ComponentFactory.Krypton.Docking.DockingPropogateAction,System.String[])">
      <summary>
            Propagates an action request down the hierarchy of docking elements.
            </summary>
      <param name="action">Action that is requested to be performed.</param>
      <param name="uniqueNames">Array of unique names of the pages the action relates to.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.PropogateDragTargets(ComponentFactory.Krypton.Docking.KryptonFloatingWindow,ComponentFactory.Krypton.Navigator.PageDragEndData,ComponentFactory.Krypton.Navigator.DragTargetList)">
      <summary>
            Propagates a request for drag targets down the hierarchy of docking elements.
            </summary>
      <param name="floatingWindow">Reference to window being dragged.</param>
      <param name="dragData">Set of pages being dragged.</param>
      <param name="targets">Collection of drag targets.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.FindPageLocation(System.String)">
      <summary>
            Find the docking location of the named page.
            </summary>
      <param name="uniqueName">Unique name of the page.</param>
      <returns>Enumeration value indicating docking location.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.FindPageElement(System.String)">
      <summary>
            Find the docking element that contains the named page.
            </summary>
      <param name="uniqueName">Unique name of the page.</param>
      <returns>IDockingElement reference if page is found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.FindStorePageElement(ComponentFactory.Krypton.Docking.DockingLocation,System.String)">
      <summary>
            Find the docking element that contains the location specific store page for the named page.
            </summary>
      <param name="location">Location to be searched.</param>
      <param name="uniqueName">Unique name of the page to be found.</param>
      <returns>IDockingElement reference if store page is found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.FindDockingWorkspace(System.String)">
      <summary>
            Find a workspace element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable workspace element is required.</param>
      <returns>KryptonDockingWorkspace reference if found; otherwise false.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.ClearStoreAction">
      <summary>
            Gets the propagate action used to clear a store page for this implementation.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.RaiseRemoved">
      <summary>
            Raises the type specific space control removed event determined by the derived class.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.RaiseCellAdding(ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell)">
      <summary>
            Raises the type specific cell adding event determined by the derived class.
            </summary>
      <param name="cell">Reference to new cell being added.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.RaiseCellRemoved(ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell)">
      <summary>
            Raises the type specific cell removed event determined by the derived class.
            </summary>
      <param name="cell">Reference to an existing cell being removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.RaiseSpacePageDrop(System.Object,ComponentFactory.Krypton.Navigator.PageDropEventArgs)">
      <summary>
            Occurs when a page is dropped on the control.
            </summary>
      <param name="sender">Source of the event.</param>
      <param name="e">A PageDropEventArgs containing the event data.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingWorkspace.XmlElementName">
      <summary>
            Gets the xml element name to use when saving.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockingSpace">
      <summary>
            Base class for docking elements that manage a KryptonSpace derived class.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.#ctor(System.String,System.String)">
      <summary>
            Initialize a new instance of the KryptonDockingSpace class.
            </summary>
      <param name="name">Initial name of the element.</param>
      <param name="storeName">Name to use for storage pages.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.Append(ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Add a KryptonPage to the currently active cell or create a new cell is no cell is currently active.
            </summary>
      <param name="page">KryptonPage to be added.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.Append(ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Add a KryptonPage array to the currently active cell or create a new cell is no cell is currently active.
            </summary>
      <param name="pages">Array of KryptonPage instances to be added.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.CellAppend(ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell,ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Add a KryptonPage into an existing cell.
            </summary>
      <param name="cell">Reference to existing workspace cell.</param>
      <param name="page">KryptonPage instance to be added.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.CellAppend(ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell,ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Add a KryptonPage array into an existing cell.
            </summary>
      <param name="cell">Reference to existing workspace cell.</param>
      <param name="pages">Array of KryptonPage instances to be added.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.CellInsert(ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell,System.Int32,ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Add a KryptonPage array into an existing cell starting at the provided index.
            </summary>
      <param name="cell">Reference to existing workspace cell.</param>
      <param name="index">Index for inserting new pages.</param>
      <param name="page">KryptonPage instance to be added.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.CellInsert(ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell,System.Int32,ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Add a KryptonPage array into an existing cell starting at the provided index.
            </summary>
      <param name="cell">Reference to existing workspace cell.</param>
      <param name="index">Index for inserting new pages.</param>
      <param name="pages">Array of KryptonPage instances to be added.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingSpace.Parent">
      <summary>
            Gets and sets access to the parent docking element.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.PropogateAction(ComponentFactory.Krypton.Docking.DockingPropogateAction,System.String[])">
      <summary>
            Propagates an action request down the hierarchy of docking elements.
            </summary>
      <param name="action">Action that is requested to be performed.</param>
      <param name="uniqueNames">Array of unique names of the pages the action relates to.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.PropogateAction(ComponentFactory.Krypton.Docking.DockingPropogateAction,ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Propagates an action request down the hierarchy of docking elements.
            </summary>
      <param name="action">Action that is requested to be performed.</param>
      <param name="pages">Array of pages the action relates to.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.PropogateBoolState(ComponentFactory.Krypton.Docking.DockingPropogateBoolState,System.String)">
      <summary>
            Propagates a boolean state request down the hierarchy of docking elements.
            </summary>
      <param name="state">Boolean state that is requested to be recovered.</param>
      <param name="uniqueName">Unique name of the page the request relates to.</param>
      <returns>True/False if state is known; otherwise null indicating no information available.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.PropogatePageState(ComponentFactory.Krypton.Docking.DockingPropogatePageState,System.String)">
      <summary>
            Propagates a page request down the hierarchy of docking elements.
            </summary>
      <param name="state">Request that should result in a page reference if found.</param>
      <param name="uniqueName">Unique name of the page the request relates to.</param>
      <returns>Reference to page that matches the request; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.PropogatePageList(ComponentFactory.Krypton.Docking.DockingPropogatePageList,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Propagates a page list request down the hierarchy of docking elements.
            </summary>
      <param name="state">Request that should result in pages collection being modified.</param>
      <param name="pages">Pages collection for modification by the docking elements.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.PropogateCellList(ComponentFactory.Krypton.Docking.DockingPropogateCellList,ComponentFactory.Krypton.Workspace.KryptonWorkspaceCellList)">
      <summary>
            Propagates a workspace cell list request down the hierarchy of docking elements.
            </summary>
      <param name="state">Request that should result in the cells collection being modified.</param>
      <param name="cells">Cells collection for modification by the docking elements.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingSpace.VisiblePages">
      <summary>
            Gets the number of visible pages.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.CellVisiblePages(System.String)">
      <summary>
            Return an array of the visible pages that are inside the cell that contains the provided unique name.
            </summary>
      <param name="uniqueName">Unique name of page that is inside the target cell.</param>
      <returns>Array of page references.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.CellForPage(System.String)">
      <summary>
            Return the workspace cell that contains the named page.
            </summary>
      <param name="uniqueName">Unique name for search.</param>
      <returns>Reference to KryptonWorkspaceCell if match found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.SelectPage(System.String)">
      <summary>
            Ensure the provided page is selected within the cell that contains it.
            </summary>
      <param name="uniqueName">Unique name to be selected.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.UpdateStrings">
      <summary>
            Update the strings from the docking manager.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.SaveElementToXml(System.Xml.XmlWriter)">
      <summary>
            Saves docking configuration information using a provider xml writer.
            </summary>
      <param name="xmlWriter">Xml writer object.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.LoadElementFromXml(System.Xml.XmlReader,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Loads docking configuration information using a provider xml reader.
            </summary>
      <param name="xmlReader">Xml reader object.</param>
      <param name="pages">Collection of available pages for adding.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingSpace.SpaceControl">
      <summary>
            Gets and sets (just once) the KryptonSpace derived class being managed.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingSpace.Order">
      <summary>
            Gets and sets the ordering of the associated control used during loading.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingSpace.LoadSize">
      <summary>
            Gets and sets the size of the control found during loading.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.OnSpaceCellPageInserting(System.Object,ComponentFactory.Krypton.Navigator.KryptonPageEventArgs)">
      <summary>
            Occurs when a page is added to a cell in the workspace.
            </summary>
      <param name="sender">Source of the event.</param>
      <param name="e">A KryptonPageEventArgs containing the event data.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingSpace.ClearStoreAction">
      <summary>
            Gets the propagate action used to clear a store page for this implementation.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.RaiseRemoved">
      <summary>
            Raises the type specific space control removed event determined by the derived class.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.RaiseCellAdding(ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell)">
      <summary>
            Raises the type specific cell adding event determined by the derived class.
            </summary>
      <param name="cell">Reference to new cell being added.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.RaiseCellRemoved(ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell)">
      <summary>
            Raises the type specific cell removed event determined by the derived class.
            </summary>
      <param name="cell">Reference to an existing cell being removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.RaiseSpacePageDrop(System.Object,ComponentFactory.Krypton.Navigator.PageDropEventArgs)">
      <summary>
            Occurs when a page is dropped on the control.
            </summary>
      <param name="sender">Source of the event.</param>
      <param name="e">A PageDropEventArgs containing the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingSpace.LoadDockingElement(System.Xml.XmlReader,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Perform docking element specific actions based on the loading xml.
            </summary>
      <param name="xmlReader">Xml reader object.</param>
      <param name="pages">Collection of available pages.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingSpace.IgnoreStorePage">
      <summary>
            Gets and sets reference to store page to be ignored during action.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockingFloatspace">
      <summary>
            Provides docking functionality within a floating window using a KryptonFloatspace.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatspace.#ctor(System.String)">
      <summary>
            Initialize a new instance of the KryptonDockingFloatspace class.
            </summary>
      <param name="name">Initial name of the element.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingFloatspace.FloatspaceControl">
      <summary>
            Gets the control this element is managing.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatspace.PropogateDragTargets(ComponentFactory.Krypton.Docking.KryptonFloatingWindow,ComponentFactory.Krypton.Navigator.PageDragEndData,ComponentFactory.Krypton.Navigator.DragTargetList)">
      <summary>
            Propagates a request for drag targets down the hierarchy of docking elements.
            </summary>
      <param name="floatingWindow">Reference to window being dragged.</param>
      <param name="dragData">Set of pages being dragged.</param>
      <param name="targets">Collection of drag targets.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatspace.FindPageLocation(System.String)">
      <summary>
            Find the docking location of the named page.
            </summary>
      <param name="uniqueName">Unique name of the page.</param>
      <returns>Enumeration value indicating docking location.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatspace.FindPageElement(System.String)">
      <summary>
            Find the docking element that contains the named page.
            </summary>
      <param name="uniqueName">Unique name of the page.</param>
      <returns>IDockingElement reference if page is found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatspace.FindStorePageElement(ComponentFactory.Krypton.Docking.DockingLocation,System.String)">
      <summary>
            Find the docking element that contains the location specific store page for the named page.
            </summary>
      <param name="location">Location to be searched.</param>
      <param name="uniqueName">Unique name of the page to be found.</param>
      <returns>IDockingElement reference if store page is found; otherwise null.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingFloatspace.ClearStoreAction">
      <summary>
            Gets the proprogate action used to clear a store page for this implementation.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatspace.OnSpaceCellPageInserting(System.Object,ComponentFactory.Krypton.Navigator.KryptonPageEventArgs)">
      <summary>
            Occurs when a page is added to a cell in the workspace.
            </summary>
      <param name="sender">Source of the event.</param>
      <param name="e">A KryptonPageEventArgs containing the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatspace.RaiseRemoved">
      <summary>
            Raises the type specific space control removed event determinated by the derived class.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatspace.RaiseCellAdding(ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell)">
      <summary>
            Raises the type specific cell adding event determinated by the derived class.
            </summary>
      <param name="cell">Referecence to new cell being added.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatspace.RaiseCellRemoved(ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell)">
      <summary>
            Raises the type specific cell removed event determinated by the derived class.
            </summary>
      <param name="cell">Referecence to an existing cell being removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatspace.RaiseSpacePageDrop(System.Object,ComponentFactory.Krypton.Navigator.PageDropEventArgs)">
      <summary>
            Occurs when a page is dropped on the control.
            </summary>
      <param name="sender">Source of the event.</param>
      <param name="e">A PageDropEventArgs containing the event data.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingFloatspace.XmlElementName">
      <summary>
            Gets the xml element name to use when saving.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatspace.LoadElementFromXml(System.Xml.XmlReader,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Loads docking configuration information using a provider xml reader.
            </summary>
      <param name="xmlReader">Xml reader object.</param>
      <param name="pages">Collection of available pages for adding.</param>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockingFloatingWindow">
      <summary>
            Provides docking functionality for a floating window that contains just a dockspace.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatingWindow.#ctor(System.String,System.Windows.Forms.Form,ComponentFactory.Krypton.Docking.KryptonDockingFloatspace)">
      <summary>
            Initialize a new instance of the KryptonDockingFloatingWindow class.
            </summary>
      <param name="name">Initial name of the element.</param>
      <param name="owner">Reference to form that owns the floating windows.</param>
      <param name="floatspace">Reference to form that will own all the floating window.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingFloatingWindow.Parent">
      <summary>
            Gets and sets access to the parent docking element.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingFloatingWindow.FloatingWindow">
      <summary>
            Gets the window this element is managing.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingFloatingWindow.FloatspaceElement">
      <summary>
            Gets the floatspace element contained by the floating window.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatingWindow.PropogateAction(ComponentFactory.Krypton.Docking.DockingPropogateAction,System.String[])">
      <summary>
            Propagates an action request down the hierarchy of docking elements.
            </summary>
      <param name="action">Action that is requested to be performed.</param>
      <param name="uniqueNames">Array of unique names of the pages the action relates to.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatingWindow.PropogateDragTargets(ComponentFactory.Krypton.Docking.KryptonFloatingWindow,ComponentFactory.Krypton.Navigator.PageDragEndData,ComponentFactory.Krypton.Navigator.DragTargetList)">
      <summary>
            Propagates a request for drag targets down the hierarchy of docking elements.
            </summary>
      <param name="floatingWindow">Reference to window being dragged.</param>
      <param name="dragData">Set of pages being dragged.</param>
      <param name="targets">Collection of drag targets.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatingWindow.CellForPage(System.String)">
      <summary>
            Return the workspace cell that contains the named page.
            </summary>
      <param name="uniqueName">Unique name for search.</param>
      <returns>Reference to KryptonWorkspaceCell if match found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatingWindow.SelectPage(System.String)">
      <summary>
            Ensure the provided page is selected within the cell that contains it.
            </summary>
      <param name="uniqueName">Unique name to be selected.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatingWindow.SaveElementToXml(System.Xml.XmlWriter)">
      <summary>
            Saves docking configuration information using a provider xml writer.
            </summary>
      <param name="xmlWriter">Xml writer object.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingFloatingWindow.XmlElementName">
      <summary>
            Gets the xml element name to use when saving.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloatingWindow.LoadDockingElement(System.Xml.XmlReader,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Perform docking element specific actions based on the loading xml.
            </summary>
      <param name="xmlReader">Xml reader object.</param>
      <param name="pages">Collection of available pages.</param>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockingFloating">
      <summary>
            Provides docking functionality for floating windows.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloating.#ctor(System.String,System.Windows.Forms.Form)">
      <summary>
            Initialize a new instance of the KryptonDockingFloating class.
            </summary>
      <param name="name">Initial name of the element.</param>
      <param name="ownerForm">Reference to form that will own all the floating windows.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingFloating.OwnerForm">
      <summary>
            Gets the form the floating windows have as the owner.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloating.AddFloatingWindow">
      <summary>
            Create and add a new floating window.
            </summary>
      <returns>Reference to docking element that handles the new workspace.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloating.AddFloatingWindow(System.String)">
      <summary>
            Create and add a new floating window.
            </summary>
      <param name="name">Initial name of the dockspace element.</param>
      <returns>Reference to docking element that handles the new workspace.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloating.FindDockingFloating(System.String)">
      <summary>
            Find a floating docking element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable floating element is required.</param>
      <returns>KryptonDockingFloating reference if found; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloating.FloatingWindowForStorePage(System.String)">
      <summary>
            Return the floating window element that contains a placeholder for the named page.
            </summary>
      <param name="uniqueName">Unique name for search.</param>
      <returns>Reference to KryptonDockingFloatingWindow if placeholder found; otherwise null.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingFloating.XmlElementName">
      <summary>
            Gets the xml element name to use when saving.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingFloating.LoadChildDockingElement(System.Xml.XmlReader,ComponentFactory.Krypton.Navigator.KryptonPageCollection,ComponentFactory.Krypton.Docking.IDockingElement)">
      <summary>
            Perform docking element specific actions for loading a child xml.
            </summary>
      <param name="xmlReader">Xml reader object.</param>
      <param name="pages">Collection of available pages.</param>
      <param name="child">Optional reference to existing child docking element.</param>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup">
      <summary>
            Provides display and docking functionality for a group of auto hidden pages.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.PageClicked">
      <summary>
            Occurs when the user clicks a page header and so requests it be shown.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.PageHoverStart">
      <summary>
            Occurs when the user hovers the mouse over a page in the group.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.PageHoverEnd">
      <summary>
            Occurs when the hover over a page ends.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.#ctor(System.String,ComponentFactory.Krypton.Docking.DockingEdge)">
      <summary>
            Initialize a new instance of the KryptonDockingAutoHiddenGroup class.
            </summary>
      <param name="name">Initial name of the element.</param>
      <param name="edge">Docking edge being managed.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.Edge">
      <summary>
            Gets the docking edge this element is managing.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.AutoHiddenGroupControl">
      <summary>
            Gets the control this element is managing.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.EdgeDockedElement">
      <summary>
            Gets the sibling docked edge.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.Append(ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Add a KryptonPage to the end of the auto hidden group.
            </summary>
      <param name="page">KryptonPage to be added.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.Append(ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Add the KryptonPage array to the end of the auto hidden group.
            </summary>
      <param name="pages">Array of KryptonPage's to be added.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.PropogateAction(ComponentFactory.Krypton.Docking.DockingPropogateAction,System.String[])">
      <summary>
            Propagates an action request down the hierarchy of docking elements.
            </summary>
      <param name="action">Action that is requested to be performed.</param>
      <param name="uniqueNames">Array of unique names of the pages the action relates to.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.PropogateAction(ComponentFactory.Krypton.Docking.DockingPropogateAction,ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Propagates an action request down the hierarchy of docking elements.
            </summary>
      <param name="action">Action that is requested to be performed.</param>
      <param name="pages">Array of pages the action relates to.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.PropogateBoolState(ComponentFactory.Krypton.Docking.DockingPropogateBoolState,System.String)">
      <summary>
            Propagates a boolean state request down the hierarchy of docking elements.
            </summary>
      <param name="state">Boolean state that is requested to be recovered.</param>
      <param name="uniqueName">Unique name of the page the request relates to.</param>
      <returns>True/False if state is known; otherwise null indicating no information available.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.PropogatePageState(ComponentFactory.Krypton.Docking.DockingPropogatePageState,System.String)">
      <summary>
            Propagates a page request down the hierarchy of docking elements.
            </summary>
      <param name="state">Request that should result in a page reference if found.</param>
      <param name="uniqueName">Unique name of the page the request relates to.</param>
      <returns>Reference to page that matches the request; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.PropogatePageList(ComponentFactory.Krypton.Docking.DockingPropogatePageList,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Propagates a page list request down the hierarchy of docking elements.
            </summary>
      <param name="state">Request that should result in pages collection being modified.</param>
      <param name="pages">Pages collection for modification by the docking elements.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.FindPageLocation(System.String)">
      <summary>
            Find the docking location of the named page.
            </summary>
      <param name="uniqueName">Unique name of the page.</param>
      <returns>Enumeration value indicating docking location.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.FindPageElement(System.String)">
      <summary>
            Find the docking element that contains the named page.
            </summary>
      <param name="uniqueName">Unique name of the page.</param>
      <returns>IDockingElement reference if page is found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.FindStorePageElement(ComponentFactory.Krypton.Docking.DockingLocation,System.String)">
      <summary>
            Find the docking element that contains the location specific store page for the named page.
            </summary>
      <param name="location">Location to be searched.</param>
      <param name="uniqueName">Unique name of the page to be found.</param>
      <returns>IDockingElement reference if store page is found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.VisiblePages">
      <summary>
            Return an array of the visible pages that are inside the auto hidden group.
            </summary>
      <returns>Array of page references.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.SaveElementToXml(System.Xml.XmlWriter)">
      <summary>
            Saves docking configuration information using a provider xml writer.
            </summary>
      <param name="xmlWriter">Xml writer object.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.LoadElementFromXml(System.Xml.XmlReader,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Loads docking configuration information using a provider xml reader.
            </summary>
      <param name="xmlReader">Xml reader object.</param>
      <param name="pages">Collection of available pages for adding.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.OnPageClicked(ComponentFactory.Krypton.Navigator.KryptonPageEventArgs)">
      <summary>
            Raises the PageClicked event.
            </summary>
      <param name="e">An KryptonPageEventArgs containing the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.OnPageHoverStart(ComponentFactory.Krypton.Navigator.KryptonPageEventArgs)">
      <summary>
            Raises the PageHoverStart event.
            </summary>
      <param name="e">An KryptonPageEventArgs containing the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.OnPageHoverEnd(System.EventArgs)">
      <summary>
            Raises the PageHoverEnd event.
            </summary>
      <param name="e">An EventArgs containing the event data.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.XmlElementName">
      <summary>
            Gets the xml element name to use when saving.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup.LoadChildDockingElement(System.Xml.XmlReader,ComponentFactory.Krypton.Navigator.KryptonPageCollection,ComponentFactory.Krypton.Docking.IDockingElement)">
      <summary>
            Perform docking element specific actions for loading a child xml.
            </summary>
      <param name="xmlReader">Xml reader object.</param>
      <param name="pages">Collection of available pages.</param>
      <param name="child">Optional reference to existing child docking element.</param>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockingDockspace">
      <summary>
            Provides docking functionality within a control edge using a KryptonDockspace.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.HasVisibleCells">
      <summary>
            Occurs when the dockspace changes to have one or more visible cells.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.HasNoVisibleCells">
      <summary>
            Occurs when the dockspace changes to no longer have any visible cells.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.#ctor(System.String,ComponentFactory.Krypton.Docking.DockingEdge,System.Drawing.Size)">
      <summary>
            Initialize a new instance of the KryptonDockingDockspace class.
            </summary>
      <param name="name">Initial name of the element.</param>
      <param name="edge">Docking edge this dockspace is against.</param>
      <param name="size">Initial size of the dockspace.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.DockspaceControl">
      <summary>
            Gets the control this element is managing.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.EdgeAutoHiddenElement">
      <summary>
            Gets the sibling auto hidden edge.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.PropogateAction(ComponentFactory.Krypton.Docking.DockingPropogateAction,System.Int32)">
      <summary>
            Propagates an action request down the hierarchy of docking elements.
            </summary>
      <param name="action">Action that is requested to be performed.</param>
      <param name="value">Integer value associated with the request.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.PropogateIntState(ComponentFactory.Krypton.Docking.DockingPropogateIntState,System.Int32@)">
      <summary>
            Propagates an integer state request down the hierarchy of docking elements.
            </summary>
      <param name="state">Integer state that is requested to be recovered.</param>
      <param name="value">Value discovered from matching </param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.PropogateDragTargets(ComponentFactory.Krypton.Docking.KryptonFloatingWindow,ComponentFactory.Krypton.Navigator.PageDragEndData,ComponentFactory.Krypton.Navigator.DragTargetList)">
      <summary>
            Propagates a request for drag targets down the hierarchy of docking elements.
            </summary>
      <param name="floatingWindow">Reference to window being dragged.</param>
      <param name="dragData">Set of pages being dragged.</param>
      <param name="targets">Collection of drag targets.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.FindPageLocation(System.String)">
      <summary>
            Find the docking location of the named page.
            </summary>
      <param name="uniqueName">Unique name of the page.</param>
      <returns>Enumeration value indicating docking location.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.FindPageElement(System.String)">
      <summary>
            Find the docking element that contains the named page.
            </summary>
      <param name="uniqueName">Unique name of the page.</param>
      <returns>IDockingElement reference if page is found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.FindStorePageElement(ComponentFactory.Krypton.Docking.DockingLocation,System.String)">
      <summary>
            Find the docking element that contains the location specific store page for the named page.
            </summary>
      <param name="location">Location to be searched.</param>
      <param name="uniqueName">Unique name of the page to be found.</param>
      <returns>IDockingElement reference if store page is found; otherwise null.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.ClearStoreAction">
      <summary>
            Gets the propagate action used to clear a store page for this implementation.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.RaiseRemoved">
      <summary>
            Raises the type specific space control removed event determined by the derived class.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.RaiseCellAdding(ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell)">
      <summary>
            Raises the type specific cell adding event determined by the derived class.
            </summary>
      <param name="cell">Reference to new cell being added.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.RaiseCellRemoved(ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell)">
      <summary>
            Raises the type specific cell removed event determined by the derived class.
            </summary>
      <param name="cell">Reference to an existing cell being removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.RaiseSpacePageDrop(System.Object,ComponentFactory.Krypton.Navigator.PageDropEventArgs)">
      <summary>
            Occurs when a page is dropped on the control.
            </summary>
      <param name="sender">Source of the event.</param>
      <param name="e">A PageDropEventArgs containing the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.OnHasVisibleCells(System.EventArgs)">
      <summary>
            Raises the HasVisibleCells event.
            </summary>
      <param name="e">An EventArgs containing the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.OnHasNoVisibleCells(System.EventArgs)">
      <summary>
            Raises the HasNoVisibleCells event.
            </summary>
      <param name="e">An EventArgs containing the event data.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.XmlElementName">
      <summary>
            Gets the xml element name to use when saving.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.SaveElementToXml(System.Xml.XmlWriter)">
      <summary>
            Saves docking configuration information using a provider xml writer.
            </summary>
      <param name="xmlWriter">Xml writer object.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingDockspace.LoadElementFromXml(System.Xml.XmlReader,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Loads docking configuration information using a provider xml reader.
            </summary>
      <param name="xmlReader">Xml reader object.</param>
      <param name="pages">Collection of available pages for adding.</param>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockingEdgeAutoHidden">
      <summary>
            Provides auto hidden docking functionality against a specific control edge.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeAutoHidden.#ctor(System.String,System.Windows.Forms.Control,ComponentFactory.Krypton.Docking.DockingEdge)">
      <summary>
            Initialize a new instance of the KryptonDockingEdgeAutoHidden class.
            </summary>
      <param name="name">Initial name of the element.</param>
      <param name="control">Reference to control that is being managed.</param>
      <param name="edge">Docking edge being managed.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingEdgeAutoHidden.Control">
      <summary>
            Gets the control this element is managing.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingEdgeAutoHidden.Edge">
      <summary>
            Gets the docking edge this element is managing.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeAutoHidden.AppendAutoHiddenGroup">
      <summary>
            Create and add a new auto hidden group instance to the correct edge of the owning control.
            </summary>
      <returns>Reference to docking element that handles the new auto hidden group.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeAutoHidden.AppendAutoHiddenGroup(System.String)">
      <summary>
            Create and add a new auto hidden group instance to the correct edge of the owning control.
            </summary>
      <param name="name">Initial name of the group element.</param>
      <returns>Reference to docking element that handles the new auto hidden group.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeAutoHidden.InsertAutoHiddenGroup(System.Int32)">
      <summary>
            Create and insert a new auto hidden group instance to the correct edge of the owning control.
            </summary>
      <param name="index">Insertion index.</param>
      <returns>Reference to docking element that handles the new auto hidden group.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeAutoHidden.InsertAutoHiddenGroup(System.Int32,System.String)">
      <summary>
            Create and insert a new auto hidden group instance to the correct edge of the owning control.
            </summary>
      <param name="index">Insertion index.</param>
      <param name="name">Initial name of the group element.</param>
      <returns>Reference to docking element that handles the new auto hidden group.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeAutoHidden.PropogateAction(ComponentFactory.Krypton.Docking.DockingPropogateAction,System.String[])">
      <summary>
            Propagates an action request down the hierarchy of docking elements.
            </summary>
      <param name="action">Action that is requested to be performed.</param>
      <param name="uniqueNames">Array of unique names of the pages the action relates to.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeAutoHidden.PropogateAction(ComponentFactory.Krypton.Docking.DockingPropogateAction,ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Propagates an action request down the hierarchy of docking elements.
            </summary>
      <param name="action">Action that is requested to be performed.</param>
      <param name="pages">Array of pages the action relates to.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeAutoHidden.FindDockingEdgeAutoHidden(System.String)">
      <summary>
            Find a edge auto hidden element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable auto hidden edge element is required.</param>
      <returns>KryptonDockingEdgeAutoHidden reference if found; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeAutoHidden.SlidePageOut(ComponentFactory.Krypton.Navigator.KryptonPage,System.Boolean)">
      <summary>
            Slide the specified page into view and optionally select.
            </summary>
      <param name="page">Page to slide into view.</param>
      <param name="select">True to select the page; otherwise false.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeAutoHidden.SlidePageOut(System.String,System.Boolean)">
      <summary>
            Slide the specified page into view and optionally select.
            </summary>
      <param name="uniqueName">Name of page to slide into view.</param>
      <param name="select">True to select the page; otherwise false.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingEdgeAutoHidden.XmlElementName">
      <summary>
            Gets the xml element name to use when saving.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeAutoHidden.LoadChildDockingElement(System.Xml.XmlReader,ComponentFactory.Krypton.Navigator.KryptonPageCollection,ComponentFactory.Krypton.Docking.IDockingElement)">
      <summary>
            Perform docking element specific actions for loading a child xml.
            </summary>
      <param name="xmlReader">Xml reader object.</param>
      <param name="pages">Collection of available pages.</param>
      <param name="child">Optional reference to existing child docking element.</param>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockingEdgeDocked">
      <summary>
            Provides edge docking functionality for a control using child dockspace control instances.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeDocked.#ctor(System.String,System.Windows.Forms.Control,ComponentFactory.Krypton.Docking.DockingEdge)">
      <summary>
            Initialize a new instance of the KryptonDockingEdgeDocked class.
            </summary>
      <param name="name">Initial name of the element.</param>
      <param name="control">Reference to control that is being managed.</param>
      <param name="edge">Docking edge being managed.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingEdgeDocked.Control">
      <summary>
            Gets the control this element is managing.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingEdgeDocked.Edge">
      <summary>
            Gets the docking edge this element is managing.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeDocked.AppendDockspace">
      <summary>
            Create and add a new dockspace instance to the correct edge of the owning control.
            </summary>
      <returns>Reference to docking element that handles the new dockspace.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeDocked.AppendDockspace(System.String)">
      <summary>
            Create and add a new dockspace instance to the correct edge of the owning control.
            </summary>
      <param name="name">Initial name of the dockspace element.</param>
      <returns>Reference to docking element that handles the new dockspace.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeDocked.AppendDockspace(System.String,System.Drawing.Size)">
      <summary>
            Create and add a new dockspace instance to the correct edge of the owning control.
            </summary>
      <param name="name">Initial name of the dockspace element.</param>
      <param name="size">Initial size of the dockspace control.</param>
      <returns>Reference to docking element that handles the new dockspace.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeDocked.InsertDockspace(System.Int32)">
      <summary>
            Create and insert a new dockspace instance to the correct edge of the owning control.
            </summary>
      <param name="index">Insertion index.</param>
      <returns>Reference to docking element that handles the new dockspace.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeDocked.InsertDockspace(System.Int32,System.String)">
      <summary>
            Create and insert a new dockspace instance to the correct edge of the owning control.
            </summary>
      <param name="index">Insertion index.</param>
      <param name="name">Initial name of the dockspace element.</param>
      <returns>Reference to docking element that handles the new dockspace.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeDocked.InsertDockspace(System.Int32,System.String,System.Drawing.Size)">
      <summary>
            Create and insert a new dockspace instance to the correct edge of the owning control.
            </summary>
      <param name="index">Insertion index.</param>
      <param name="name">Initial name of the dockspace element.</param>
      <param name="size">Initial size of the dockspace control.</param>
      <returns>Reference to docking element that handles the new dockspace.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeDocked.FindDockingEdgeDocked(System.String)">
      <summary>
            Find a edge docked element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable docking edge element is required.</param>
      <returns>KryptonDockingEdgeDocked reference if found; otherwise false.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingEdgeDocked.XmlElementName">
      <summary>
            Gets the xml element name to use when saving.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdgeDocked.LoadChildDockingElement(System.Xml.XmlReader,ComponentFactory.Krypton.Navigator.KryptonPageCollection,ComponentFactory.Krypton.Docking.IDockingElement)">
      <summary>
            Perform docking element specific actions for loading a child xml.
            </summary>
      <param name="xmlReader">Xml reader object.</param>
      <param name="pages">Collection of available pages.</param>
      <param name="child">Optional reference to existing child docking element.</param>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockingEdge">
      <summary>
            Provides docking functionality for a specific edge of a control.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingEdge.#ctor(System.String,System.Windows.Forms.Control,ComponentFactory.Krypton.Docking.DockingEdge)">
      <summary>
            Initialize a new instance of the KryptonDockingEdge class.
            </summary>
      <param name="name">Initial name of the element.</param>
      <param name="control">Reference to control that is being managed.</param>
      <param name="edge">Docking edge being managed.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingEdge.Control">
      <summary>
            Gets the control this element is managing.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingEdge.Edge">
      <summary>
            Gets the docking edge this element is managing.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingEdge.XmlElementName">
      <summary>
            Gets the xml element name to use when saving.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockingManager">
      <summary>
            Manages a hierarchy of docking elements to provide docking windows functionality.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.PageCloseRequest">
      <summary>
            Occurs when the user requests a page be closed.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.PageDockedRequest">
      <summary>
            Occurs when the user requests a page become docked.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.PageAutoHiddenRequest">
      <summary>
            Occurs when the user requests a page become auto hidden.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.PageFloatingRequest">
      <summary>
            Occurs when the user requests a page become floating.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.PageWorkspaceRequest">
      <summary>
            Occurs when the user requests a page become workspace tabbed.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.PageNavigatorRequest">
      <summary>
            Occurs when the user requests a page become navigator tabbed.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.ShowPageContextMenu">
      <summary>
            Occurs when a docking context menu is about to be shown for a page.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.ShowWorkspacePageContextMenu">
      <summary>
            Occurs when a dockable workspace context menu is about to be shown for a page.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.GlobalSaving">
      <summary>
            Occurs when global docking configuration information is saving.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.GlobalLoading">
      <summary>
            Occurs when global docking configuration information is loading.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.PageSaving">
      <summary>
            Occurs when page docking configuration information is saving.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.PageLoading">
      <summary>
            Occurs when page docking configuration information is loading.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.OrphanedPages">
      <summary>
            Occurs when docking configuration information is loaded and existing pages have become orphaned because they are not used in the incoming configuration.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.RecreateLoadingPage">
      <summary>
            Occurs when docking configuration information is loading and a page needs creating to match incoming unique name.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.AutoHiddenSeparatorResize">
      <summary>
            Occurs when a separator is used to resize an auto hidden dockspace.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.DockspaceSeparatorResize">
      <summary>
            Occurs when a separator is used to resize a docked dockspace.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.AutoHiddenGroupAdding">
      <summary>
            Occurs when a new auto hidden group is being added.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.AutoHiddenGroupRemoved">
      <summary>
            Occurs when an existing auto hidden group is being removed.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.AutoHiddenGroupPanelAdding">
      <summary>
            Occurs when a new panel for hosting auto hidden groups is being added.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.AutoHiddenGroupPanelRemoved">
      <summary>
            Occurs when an existing panel for hosting auto hidden groups is being removed.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.DockableWorkspaceAdded">
      <summary>
            Occurs when a new dockable workspace control is being added.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.DockableWorkspaceRemoved">
      <summary>
            Occurs when an existing dockable workspace control is being removed.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.DockableNavigatorAdded">
      <summary>
            Occurs when a new dockable navigator control is being added.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.DockableNavigatorRemoved">
      <summary>
            Occurs when an existing dockable navigator control is being removed.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.DockableWorkspaceCellAdding">
      <summary>
            Occurs when a new dockable workspace control cell is being added.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.DockableWorkspaceCellRemoved">
      <summary>
            Occurs when an existing dockable workspace control cell is being removed.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.DockspaceAdding">
      <summary>
            Occurs when a new dockspace control is being added.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.DockspaceRemoved">
      <summary>
            Occurs when an existing dockspace control is being removed.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.DockspaceCellAdding">
      <summary>
            Occurs when a new dockspace control cell is being added.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.DockspaceCellRemoved">
      <summary>
            Occurs when an existing dockspace control cell is being removed.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.DockspaceSeparatorAdding">
      <summary>
            Occurs when a new dockspace separator control is being added.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.DockspaceSeparatorRemoved">
      <summary>
            Occurs when an existing dockspace separator control is being removed.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.FloatspaceAdding">
      <summary>
            Occurs when a new floatspace control is being added.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.FloatspaceRemoved">
      <summary>
            Occurs when an existing floatspace control is being removed.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.FloatspaceCellAdding">
      <summary>
            Occurs when a new floatspace control cell is being added.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.FloatspaceCellRemoved">
      <summary>
            Occurs when an existing floatspace control cell is being removed.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.FloatingWindowAdding">
      <summary>
            Occurs when a new floating window is being added.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.FloatingWindowRemoved">
      <summary>
            Occurs when an existing floating window is being removed.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.AutoHiddenShowingStateChanged">
      <summary>
            Occurs when an auto hidden page showing state changes.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.DoDragDropEnd">
      <summary>
            Occurs when a drag drop operation has ended with success.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.KryptonDockingManager.DoDragDropQuit">
      <summary>
            Occurs when a drag drop operation has been quit.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.#ctor">
      <summary>
            Initialize a new instance of the KryptonDockingManager class.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.#ctor(System.String)">
      <summary>
            Initialize a new instance of the KryptonDockingManager class.
            </summary>
      <param name="name">Initial name of the element.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ManageControl(System.Windows.Forms.Control)">
      <summary>
            Manage auto hidden/docked capabilities for provided control.
            </summary>
      <param name="c">Reference to control instance.</param>
      <returns>KryptonDockingControl instance created.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ManageControl(System.Windows.Forms.Control,ComponentFactory.Krypton.Docking.KryptonDockingNavigator)">
      <summary>
            Manage auto hidden/docked capabilities for provided control.
            </summary>
      <param name="c">Reference to control instance.</param>
      <param name="navigator">Reference to docking navigator that is inside the control.</param>
      <returns>KryptonDockingControl instance created.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ManageControl(System.Windows.Forms.Control,ComponentFactory.Krypton.Docking.KryptonDockingWorkspace)">
      <summary>
            Manage auto hidden/docked capabilities for provided control.
            </summary>
      <param name="c">Reference to control instance.</param>
      <param name="workspace">Reference to docking workspace that is inside the control.</param>
      <returns>KryptonDockingControl instance created.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ManageControl(System.String,System.Windows.Forms.Control)">
      <summary>
            Manage auto hidden/docked capabilities for provided control.
            </summary>
      <param name="name">Name for new docking element.</param>
      <param name="c">Reference to control instance.</param>
      <returns>KryptonDockingControl instance created.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ManageControl(System.String,System.Windows.Forms.Control,ComponentFactory.Krypton.Docking.KryptonDockingNavigator)">
      <summary>
            Manage auto hidden/docked capabilities for provided control.
            </summary>
      <param name="name">Name for new docking element.</param>
      <param name="c">Reference to control instance.</param>
      <param name="navigator">Reference to docking navigator that is inside the control.</param>
      <returns>KryptonDockingControl instance created.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ManageControl(System.String,System.Windows.Forms.Control,ComponentFactory.Krypton.Docking.KryptonDockingWorkspace)">
      <summary>
            Manage auto hidden/docked capabilities for provided control.
            </summary>
      <param name="name">Name for new docking element.</param>
      <param name="c">Reference to control instance.</param>
      <param name="workspace">Reference to docking workspace that is inside the control.</param>
      <returns>KryptonDockingControl instance created.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ManageFloating(System.Windows.Forms.Form)">
      <summary>
            Manage floating windows capability for provided form.
            </summary>
      <param name="f">Reference to form.</param>
      <returns>KryptonDockingFloating instance created.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ManageFloating(System.String,System.Windows.Forms.Form)">
      <summary>
            Manage floating windows capability for provided form.
            </summary>
      <param name="name">Name for new docking element.</param>
      <param name="f">Reference to form.</param>
      <returns>KryptonDockingFloating instance created.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ManageWorkspace(ComponentFactory.Krypton.Docking.KryptonDockableWorkspace)">
      <summary>
            Manage docking capability for provided dockable workspace control.
            </summary>
      <param name="w">Reference to dockable workspace.</param>
      <returns>KryptonDockingWorkspace instance created.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ManageWorkspace(System.String,ComponentFactory.Krypton.Docking.KryptonDockableWorkspace)">
      <summary>
            Manage docking capability for provided dockable workspace control.
            </summary>
      <param name="name">Name for new docking element.</param>
      <param name="w">Reference to dockable workspace.</param>
      <returns>KryptonDockingWorkspace instance created.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ManageWorkspace(System.String,System.String,ComponentFactory.Krypton.Docking.KryptonDockableWorkspace)">
      <summary>
            Manage docking capability for provided dockable workspace control.
            </summary>
      <param name="name">Name for new docking element.</param>
      <param name="storeName">Store name for docking element.</param>
      <param name="w">Reference to dockable workspace.</param>
      <returns>KryptonDockingWorkspace instance created.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ManageNavigator(ComponentFactory.Krypton.Docking.KryptonDockableNavigator)">
      <summary>
            Manage docking capability for provided dockable navigator control.
            </summary>
      <param name="n">Reference to dockable navigator.</param>
      <returns>KryptonDockingNavigator instance created.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ManageNavigator(System.String,ComponentFactory.Krypton.Docking.KryptonDockableNavigator)">
      <summary>
            Manage docking capability for provided dockable navigator control.
            </summary>
      <param name="name">Name for new docking element.</param>
      <param name="n">Reference to dockable navigator.</param>
      <returns>KryptonDockingNavigator instance created.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ManageNavigator(System.String,System.String,ComponentFactory.Krypton.Docking.KryptonDockableNavigator)">
      <summary>
            Manage docking capability for provided dockable navigator control.
            </summary>
      <param name="name">Name for new docking element.</param>
      <param name="storeName">Store name for docking element.</param>
      <param name="n">Reference to dockable navigator.</param>
      <returns>KryptonDockingNavigator instance created.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingManager.Strings">
      <summary>
            Gets access to the set of display strings required of the docking hierarchy display elements.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ResolvePath(System.String)">
      <summary>
            Resolve the provided path.
            </summary>
      <param name="path">Comma separated list of names to resolve.</param>
      <returns>IDockingElement reference if path was resolved with success; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ShowPage(ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Show all display elements of the provided page.
            </summary>
      <param name="page">Reference to page that should be shown.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ShowPage(System.String)">
      <summary>
            Show all display elements of the provided page.
            </summary>
      <param name="uniqueName">Unique name of the page that should be shown.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ShowPages(ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Show all display elements of the provided pages.
            </summary>
      <param name="pages">Array of references to pages that should be shown.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ShowPages(System.String[])">
      <summary>
            Show all display elements of the provided pages.
            </summary>
      <param name="uniqueNames">Array of unique names of the pages that should be shown.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ShowAllPages">
      <summary>
            Show all display elements of all pages.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.HidePage(ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Hide all display elements of the provided page.
            </summary>
      <param name="page">Reference to page that should be hidden.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.HidePage(System.String)">
      <summary>
            Hide all display elements of the provided page.
            </summary>
      <param name="uniqueName">Unique name of the page that should be hidden.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.HidePages(ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Hide all display elements of the provided pages.
            </summary>
      <param name="pages">Array of references to pages that should be hidden.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.HidePages(System.String[])">
      <summary>
            Hide all display elements of the provided pages.
            </summary>
      <param name="uniqueNames">Array of unique names of the pages that should be hidden.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.HideAllPages">
      <summary>
            Hide all display elements of all pages.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.IsPageShowing(ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Determines if the provided page is present and showing.
            </summary>
      <param name="page">Reference to page.</param>
      <returns>True if the page is present and showing; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.IsPageShowing(System.String)">
      <summary>
            Determines if the provided page is present and showing.
            </summary>
      <param name="uniqueName">Unique name of page..</param>
      <returns>True if the page is present and showing; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.RemovePage(ComponentFactory.Krypton.Navigator.KryptonPage,System.Boolean)">
      <summary>
            Remove the referenced page.
            </summary>
      <param name="page">Reference to page that should be removed.</param>
      <param name="disposePage">Should the page be disposed when removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.RemovePage(System.String,System.Boolean)">
      <summary>
            Remove the named page.
            </summary>
      <param name="uniqueName">Unique name of the page that should be removed.</param>
      <param name="disposePage">Should the page be disposed when removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.RemovePages(ComponentFactory.Krypton.Navigator.KryptonPage[],System.Boolean)">
      <summary>
            Remove the referenced pages.
            </summary>
      <param name="pages">Array of references to pages that should be removed.</param>
      <param name="disposePage">Should the page be disposed when removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.RemovePages(System.String[],System.Boolean)">
      <summary>
            Remove the named pages.
            </summary>
      <param name="uniqueNames">Array of unique names of the pages that should be removed.</param>
      <param name="disposePage">Should the page be disposed when removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.RemoveAllPages(System.Boolean)">
      <summary>
            Remove all pages.
            </summary>
      <param name="disposePage">Should the page be disposed when removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ContainsPage(ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Determines if the provided page is present in the docking hierarchy.
            </summary>
      <param name="page">Reference to page that should be found.</param>
      <returns>True if the page is present; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ContainsPage(System.String)">
      <summary>
            Determines if the provided page is present in the docking hierarchy.
            </summary>
      <param name="uniqueName">Unique name of page that should be found.</param>
      <returns>True if the page is present; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.PageForUniqueName(System.String)">
      <summary>
            Find the page reference that has the requested unique name.
            </summary>
      <param name="uniqueName">Unique name of page that should be found.</param>
      <returns>Reference to page if the named page exists in the docking hierarchy; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.StorePage(ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Replace named page with a store placeholder so it can be restored at a later time.
            </summary>
      <param name="page">Reference to page that should be replaced.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.StorePage(System.String)">
      <summary>
            Replace page with a store placeholder so it can be restored at a later time.
            </summary>
      <param name="uniqueName">Unique name of the page that should be replaced.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.StorePages(ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Replace named pages with store placeholders so they can be restored at a later time.
            </summary>
      <param name="pages">Array of references to pages that should be replaced.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.StorePages(System.String[])">
      <summary>
            Replace pages with store placeholders so they can be restored at a later time.
            </summary>
      <param name="uniqueNames">Array of unique names of the pages that should be replaced.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.StoreAllPages">
      <summary>
            Replace all pages with store placeholders so they can be restored at a later time.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ClearStoredPages(ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Clear away any store pages for the provided pages.
            </summary>
      <param name="pages">Array of references to pages that should be shown.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ClearStoredPages(System.String[])">
      <summary>
            Clear away any store pages for the provided unique named pages.
            </summary>
      <param name="uniqueNames">Array of unique names of the pages that should have store pages removed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ClearAllStoredPages">
      <summary>
            Cleat away all store pages.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.FindPageLocation(ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Find the docking location of the provided page.
            </summary>
      <param name="page">Reference to page.</param>
      <returns>Enumeration value indicating docking location.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.FindPageLocation(System.String)">
      <summary>
            Find the docking location of the named page.
            </summary>
      <param name="uniqueName">Unique name of the page.</param>
      <returns>Enumeration value indicating docking location.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.FindPageElement(ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Find the docking element that contains the provided page.
            </summary>
      <param name="page">Reference to page.</param>
      <returns>IDockingElement reference if page is found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.FindPageElement(System.String)">
      <summary>
            Find the docking element that contains the named page.
            </summary>
      <param name="uniqueName">Unique name of the page.</param>
      <returns>IDockingElement reference if page is found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.FindStorePageElement(ComponentFactory.Krypton.Docking.DockingLocation,ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Find the docking element that contains the location specific store page for the named page.
            </summary>
      <param name="location">Location to be searched.</param>
      <param name="page">Reference to page.</param>
      <returns>IDockingElement reference if store page is found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.FindStorePageElement(ComponentFactory.Krypton.Docking.DockingLocation,System.String)">
      <summary>
            Find the docking element that contains the location specific store page for the named page.
            </summary>
      <param name="location">Location to be searched.</param>
      <param name="uniqueName">Unique name of the page to be found.</param>
      <returns>IDockingElement reference if store page is found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.FindDockingFloating(System.String)">
      <summary>
            Find a floating docking element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable floating element is required.</param>
      <returns>KryptonDockingFloating reference if found; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.FindDockingEdgeDocked(System.String)">
      <summary>
            Find a edge docked element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable docking edge element is required.</param>
      <returns>KryptonDockingEdgeDocked reference if found; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.FindDockingEdgeAutoHidden(System.String)">
      <summary>
            Find a edge auto hidden element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable auto hidden edge element is required.</param>
      <returns>KryptonDockingEdgeAutoHidden reference if found; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.FindDockingWorkspace(System.String)">
      <summary>
            Find a workspace element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable workspace element is required.</param>
      <returns>KryptonDockingWorkspace reference if found; otherwise false.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingManager.DefaultCloseRequest">
      <summary>
            Gets and sets the default request action to use for a close.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.CloseRequest(System.String[])">
      <summary>
            Perform the close request for a set of named pages.
            </summary>
      <param name="uniqueNames">Array of unique names that need action performed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.MakeAutoHiddenRequest(System.String)">
      <summary>
            Make the named page auto hidden.
            </summary>
      <param name="uniqueName">Unique name of page to become auto hidden.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.MakeDockedRequest(System.String)">
      <summary>
            Make the named page docked.
            </summary>
      <param name="uniqueName">Unique name of page to become docked.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.MakeFloatingRequest(System.String)">
      <summary>
            Make the named page floating.
            </summary>
      <param name="uniqueName">Unique name of page to become floating.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.MakeWorkspaceRequest(System.String)">
      <summary>
            Make the named page workspace tabbed.
            </summary>
      <param name="uniqueName">Unique name of page to become workspace tabbed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.MakeNavigatorRequest(System.String)">
      <summary>
            Make the named page navigator tabbed.
            </summary>
      <param name="uniqueName">Unique name of page to become navigator tabbed.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.ShowPageContextMenuRequest(ComponentFactory.Krypton.Navigator.KryptonPage,ComponentFactory.Krypton.Toolkit.KryptonContextMenu)">
      <summary>
            Populate a context menu appropriate for a non-dockable workspace provided page.
            </summary>
      <param name="page">Reference to page.</param>
      <param name="kcm">Reference to context menu.</param>
      <returns>True if the context menu should be displayed; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.SwitchDockedCellToAutoHiddenGroupRequest(System.String)">
      <summary>
            Perform a switch from docked cell to auto hidden group for the visible pages inside the cell.
            </summary>
      <param name="uniqueName">Unique name of page inside docked cell that needs switching.</param>
      <returns>KryptonDockingAutoHiddenGroup reference on success; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.SwitchDockedToFloatingWindowRequest(System.String[])">
      <summary>
            Perform a switch from docked pages to floating window for the named pages.
            </summary>
      <param name="uniqueNames">Unique name of pages inside a docked cell that needs switching.</param>
      <returns>KryptonDockingFloatingWindow reference on success; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.SwitchFloatingToDockedRequest(System.String[])">
      <summary>
            Perform a switch from floating to docked for the named pages.
            </summary>
      <param name="uniqueNames">Unique name of floating pages that need switching.</param>
      <returns>KryptonDockingDockspace reference if a new dockspace needed to be created; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.SwitchFloatingToFloatingWindowRequest(System.String[])">
      <summary>
            Perform a switch from floating to new floating window for the named pages.
            </summary>
      <param name="uniqueNames">Unique name of floating pages that need switching.</param>
      <returns>KryptonDockingFloatingWindow reference on success; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.SwitchAutoHiddenGroupToDockedCellRequest(System.String)">
      <summary>
            Perform a switch from auto hidden group to docked cell for the visible pages inside the group.
            </summary>
      <param name="uniqueName">Unique name of page inside auto hidden group that needs switching.</param>
      <returns>KryptonDockingDockspace reference if a new dockspace needed to be created; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.AddDockspace(System.String,ComponentFactory.Krypton.Docking.DockingEdge,ComponentFactory.Krypton.Navigator.KryptonPage[],ComponentFactory.Krypton.Navigator.KryptonPage[][])">
      <summary>
            Add set of pages docked against a specified edge of the specified control.
            </summary>
      <param name="path">Path for finding the target KryptonDockingControl.</param>
      <param name="edge">Target edge within the KryptonDockingControl.</param>
      <param name="pages">Array of pages to be added as docked.</param>
      <param name="stackPages">Extra arrays of pages to be added in a stacked manner.</param>
      <returns>KryptonDockingDockspace reference.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.AddAutoHiddenGroup(System.String,ComponentFactory.Krypton.Docking.DockingEdge,ComponentFactory.Krypton.Navigator.KryptonPage[],ComponentFactory.Krypton.Navigator.KryptonPage[][])">
      <summary>
            Add set of pages as a new auto hidden group to the specified edge of the specified control.
            </summary>
      <param name="path">Path for finding the target KryptonDockingControl.</param>
      <param name="edge">Target edge within the KryptonDockingControl.</param>
      <param name="pages">Array of pages to be added as an auto hidden group.</param>
      <param name="extraPages">Extra arrays of pages to be added as extra groups.</param>
      <returns>KryptonDockingAutoHiddenGroup reference.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.AddFloatingWindow(System.String,ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Add set of pages as a new floating window.
            </summary>
      <param name="path">Path for finding the target KryptonDockingFloating.</param>
      <param name="pages">Array of pages to be added as an auto hidden group.</param>
      <returns>KryptonDockingFloatingWindow reference.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.AddFloatingWindow(System.String,ComponentFactory.Krypton.Navigator.KryptonPage[],System.Drawing.Size)">
      <summary>
            Add set of pages as a new floating window.
            </summary>
      <param name="path">Path for finding the target KryptonDockingFloating.</param>
      <param name="pages">Array of pages to be added as an auto hidden group.</param>
      <param name="clientSize">Initial client size of the floating window.</param>
      <returns>KryptonDockingFloatingWindow reference.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.AddFloatingWindow(System.String,ComponentFactory.Krypton.Navigator.KryptonPage[],System.Drawing.Point)">
      <summary>
            Add set of pages as a new floating window.
            </summary>
      <param name="path">Path for finding the target KryptonDockingFloating.</param>
      <param name="pages">Array of pages to be added as an auto hidden group.</param>
      <param name="location">Initial screen location of the floating window.</param>
      <returns>KryptonDockingFloatingWindow reference.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.AddFloatingWindow(System.String,ComponentFactory.Krypton.Navigator.KryptonPage[],System.Drawing.Point,System.Drawing.Size)">
      <summary>
            Add set of pages as a new floating window.
            </summary>
      <param name="path">Path for finding the target KryptonDockingFloating.</param>
      <param name="pages">Array of pages to be added as an auto hidden group.</param>
      <param name="location">Initial screen location of the floating window.</param>
      <param name="clientSize">Initial client size of the floating window.</param>
      <returns>KryptonDockingFloatingWindow reference.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.AddToWorkspace(System.String,ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Add set of pages to a docking workspace.
            </summary>
      <param name="path">Path for finding the target KryptonDockingWorkspace.</param>
      <param name="pages">Array of pages to be added.</param>
      <returns>KryptonDockingWorkspace reference.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.AddToNavigator(System.String,ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Add set of pages to a docking navigator.
            </summary>
      <param name="path">Path for finding the target KryptonDockingNavigator.</param>
      <param name="pages">Array of pages to be added.</param>
      <returns>KryptonDockingNavigator reference.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.InsertDockspace(System.String,ComponentFactory.Krypton.Docking.DockingEdge,System.Int32,ComponentFactory.Krypton.Navigator.KryptonPage[],ComponentFactory.Krypton.Navigator.KryptonPage[][])">
      <summary>
            Add set of pages docked against a specified edge of the specified control.
            </summary>
      <param name="path">Path for finding the target KryptonDockingControl.</param>
      <param name="edge">Target edge within the KryptonDockingControl.</param>
      <param name="index">Insert index.</param>
      <param name="pages">Array of pages to be added as docked.</param>
      <param name="stackPages">Extra arrays of pages to be added in a stacked manner.</param>
      <returns>KryptonDockingDockspace reference.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.InsertAutoHiddenGroup(System.String,ComponentFactory.Krypton.Docking.DockingEdge,System.Int32,ComponentFactory.Krypton.Navigator.KryptonPage[],ComponentFactory.Krypton.Navigator.KryptonPage[][])">
      <summary>
            Add set of pages as a new auto hidden group to the specified edge of the specified control.
            </summary>
      <param name="path">Path for finding the target KryptonDockingControl.</param>
      <param name="edge">Target edge within the KryptonDockingControl.</param>
      <param name="index">Insert index.</param>
      <param name="pages">Array of pages to be added as an auto hidden group.</param>
      <param name="extraPages">Extra arrays of pages to be added as extra groups.</param>
      <returns>KryptonDockingAutoHiddenGroup reference.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.DoDragDrop(System.Drawing.Point,System.Drawing.Point,System.Windows.Forms.Control,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Generate an implementation of the IDragPageNotify class that will be used to handle the drag/drop operation.
            </summary>
      <param name="screenPoint">Screen point of the mouse for the drag operation.</param>
      <param name="elementOffset">Offset from top left of element causing the drag.</param>
      <param name="c">Control that started the drag operation.</param>
      <param name="pages">Set of pages requested to be dragged.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.DoDragDrop(System.Drawing.Point,System.Drawing.Point,System.Windows.Forms.Control,ComponentFactory.Krypton.Docking.KryptonDockingFloatingWindow)">
      <summary>
            Generate an implementation of the IDragPageNotify class that will be used to handle the drag/drop operation.
            </summary>
      <param name="screenPoint">Screen point of the mouse for the drag operation.</param>
      <param name="elementOffset">Offset from top left of element causing the drag.</param>
      <param name="c">Control that started the drag operation.</param>
      <param name="window">Reference to floating window element that should be dragged.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.SaveConfigToArray">
      <summary>
            Saves docking configuration information into an array of bytes using Unicode Encoding.
            </summary>
      <returns>Array of created bytes.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.SaveConfigToArray(System.Text.Encoding)">
      <summary>
            Saves docking configuration information into an array of bytes.
            </summary>
      <param name="encoding">Required encoding.</param>
      <returns>Array of created bytes.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.SaveConfigToFile(System.String)">
      <summary>
            Saves docking configuration information into a named file using Unicode Encoding.
            </summary>
      <param name="filename">Name of file to save to.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.SaveConfigToFile(System.String,System.Text.Encoding)">
      <summary>
            Saves docking configuration information into a named file.
            </summary>
      <param name="filename">Name of file to save to.</param>
      <param name="encoding">Required encoding.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.SaveConfigToStream(System.IO.Stream,System.Text.Encoding)">
      <summary>
            Saves docking configuration information into a stream object.
            </summary>
      <param name="stream">Stream object.</param>
      <param name="encoding">Required encoding.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.SaveConfigToXml(System.Xml.XmlWriter)">
      <summary>
            Saves docking configuration information using a provider xml writer.
            </summary>
      <param name="xmlWriter">Xml writer object.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.LoadConfigFromArray(System.Byte[])">
      <summary>
            Loads docking configuration information from given array of bytes.
            </summary>
      <param name="buffer">Array of source bytes.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.LoadConfigFromArray(System.String)">
      <summary>
            Loads docking configuration information from given filename.
            </summary>
      <param name="filename">Name of file to read from.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.LoadConfigFromFile(System.String)">
      <summary>
            Loads docking configuration information from given filename.
            </summary>
      <param name="filename">Name of file to read from.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.LoadConfigFromStream(System.IO.Stream)">
      <summary>
            Loads docking configuration information from given stream object.
            </summary>
      <param name="stream">Stream object.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.LoadConfigFromXml(System.Xml.XmlReader)">
      <summary>
            Loads docking configuration information using the provided xml reader.
            </summary>
      <param name="xmlReader">Xml reader object.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingManager.Pages">
      <summary>
            Gets an array of all the pages inside the docking hierarchy.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingManager.PagesDocked">
      <summary>
            Gets an array of all the pages docked inside the docking hierarchy.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingManager.PagesAutoHidden">
      <summary>
            Gets an array of all the pages auto hidden inside the docking hierarchy.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingManager.PagesFloating">
      <summary>
            Gets an array of all the pages floating inside the docking hierarchy.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingManager.PagesWorkspace">
      <summary>
            Gets an array of all the pages inside a dockable workspace inside the docking hierarchy.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingManager.Cells">
      <summary>
            Gets an array of all the cells inside the docking hierarchy.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingManager.CellsDocked">
      <summary>
            Gets an array of all the cells docked inside the docking hierarchy.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingManager.CellsFloating">
      <summary>
            Gets an array of all the cells floating inside the docking hierarchy.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingManager.CellsWorkspace">
      <summary>
            Gets an array of all the cells inside a dockable workspace inside the docking hierarchy.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.DockingCellForPage(System.String)">
      <summary>
            Return the cell the page belongs to, when available (JDH Software add)
            </summary>
      <param name="uniqueName">The uniqueName of the page.</param>
      <returns>The KryptonWorkspaceCell.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnAutoHiddenSeparatorResize(ComponentFactory.Krypton.Docking.AutoHiddenSeparatorResizeEventArgs)">
      <summary>
            Raises the AutoHiddenSeparatorResize event.
            </summary>
      <param name="e">An AutoHiddenSeparatorResizeEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnPageCloseRequest(ComponentFactory.Krypton.Docking.CloseRequestEventArgs)">
      <summary>
            Raises the PageCloseRequest event.
            </summary>
      <param name="e">An CloseActionEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnPageDockedRequest(ComponentFactory.Krypton.Docking.CancelUniqueNameEventArgs)">
      <summary>
            Raises the PageDockedRequest event.
            </summary>
      <param name="e">An CancelUniqueNameEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnPageAutoHiddenRequest(ComponentFactory.Krypton.Docking.CancelUniqueNameEventArgs)">
      <summary>
            Raises the PageAutoHiddenRequest event.
            </summary>
      <param name="e">An CancelUniqueNameEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnPageFloatingRequest(ComponentFactory.Krypton.Docking.CancelUniqueNameEventArgs)">
      <summary>
            Raises the PageFloatingRequest event.
            </summary>
      <param name="e">An CancelUniqueNameEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnPageWorkspaceRequest(ComponentFactory.Krypton.Docking.CancelUniqueNameEventArgs)">
      <summary>
            Raises the PageWorkspaceRequest event.
            </summary>
      <param name="e">An CancelUniqueNameEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnPageNavigatorRequest(ComponentFactory.Krypton.Docking.CancelUniqueNameEventArgs)">
      <summary>
            Raises the PageNavigatorRequest event.
            </summary>
      <param name="e">An CancelUniqueNameEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnDockspaceSeparatorResize(ComponentFactory.Krypton.Docking.DockspaceSeparatorResizeEventArgs)">
      <summary>
            Raises the DockspaceSeparatorResize event.
            </summary>
      <param name="e">An DockspaceSeparatorResizeEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnShowPageContextMenu(ComponentFactory.Krypton.Docking.ContextPageEventArgs)">
      <summary>
            Raises the ShowPageContextMenu event.
            </summary>
      <param name="e">An ContextPageEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnShowWorkspacePageContextMenu(ComponentFactory.Krypton.Docking.ContextPageEventArgs)">
      <summary>
            Raises the ShowWorkspacePageContextMenu event.
            </summary>
      <param name="e">An ContextPageEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnGlobalSaving(ComponentFactory.Krypton.Docking.DockGlobalSavingEventArgs)">
      <summary>
            Raises the GlobalSaving event.
            </summary>
      <param name="e">An DockGlobalSavingEventArgs containing event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnGlobalLoading(ComponentFactory.Krypton.Docking.DockGlobalLoadingEventArgs)">
      <summary>
            Raises the GlobalLoading event.
            </summary>
      <param name="e">An DockGlobalLoadingEventArgs containing event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnPageSaving(ComponentFactory.Krypton.Docking.DockPageSavingEventArgs)">
      <summary>
            Raises the PageSaving event.
            </summary>
      <param name="e">An DockPageSavingEventArgs containing event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnPageLoading(ComponentFactory.Krypton.Docking.DockPageLoadingEventArgs)">
      <summary>
            Raises the PageLoading event.
            </summary>
      <param name="e">An DockPageLoadingEventArgs containing event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnOrphanedPages(ComponentFactory.Krypton.Docking.PagesEventArgs)">
      <summary>
            Raises the OrphanedPages event.
            </summary>
      <param name="e">An PagesEventArgs containing event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnRecreateLoadingPage(ComponentFactory.Krypton.Workspace.RecreateLoadingPageEventArgs)">
      <summary>
            Raises the RecreateLoadingPage event.
            </summary>
      <param name="e">An RecreateLoadingPageEventArgs containing event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnAutoHiddenGroupAdding(ComponentFactory.Krypton.Docking.AutoHiddenGroupEventArgs)">
      <summary>
            Raises the AutoHiddenGroupAdding event.
            </summary>
      <param name="e">An AutoHiddenGroupEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnAutoHiddenGroupRemoved(ComponentFactory.Krypton.Docking.AutoHiddenGroupEventArgs)">
      <summary>
            Raises the AutoHiddenGroupRemoved event.
            </summary>
      <param name="e">An AutoHiddenGroupEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnAutoHiddenGroupPanelAdding(ComponentFactory.Krypton.Docking.AutoHiddenGroupPanelEventArgs)">
      <summary>
            Raises the AutoHiddenGroupPanelAdding event.
            </summary>
      <param name="e">An AutoHiddenGroupPanelEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnAutoHiddenGroupPanelRemoved(ComponentFactory.Krypton.Docking.AutoHiddenGroupPanelEventArgs)">
      <summary>
            Raises the AutoHiddenGroupPanelRemoved event.
            </summary>
      <param name="e">An AutoHiddenGroupPanelEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnDockableWorkspaceAdded(ComponentFactory.Krypton.Docking.DockableWorkspaceEventArgs)">
      <summary>
            Raises the DockableWorkspaceAdded event.
            </summary>
      <param name="e">An DockableWorkspaceEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnDockableWorkspaceRemoved(ComponentFactory.Krypton.Docking.DockableWorkspaceEventArgs)">
      <summary>
            Raises the DockableWorkspaceRemoved event.
            </summary>
      <param name="e">An DockableWorkspaceEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnDockableNavigatorAdded(ComponentFactory.Krypton.Docking.DockableNavigatorEventArgs)">
      <summary>
            Raises the DockableNavigatorAdded event.
            </summary>
      <param name="e">An DockableNavigatorEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnDockableNavigatorRemoved(ComponentFactory.Krypton.Docking.DockableNavigatorEventArgs)">
      <summary>
            Raises the DockableNavigatorRemoved event.
            </summary>
      <param name="e">An DockableNavigatorEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnDockableWorkspaceCellAdding(ComponentFactory.Krypton.Docking.DockableWorkspaceCellEventArgs)">
      <summary>
            Raises the DockableWorkspaceCellAdding event.
            </summary>
      <param name="e">An DockableWorkspaceCellEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnDockableWorkspaceCellRemoved(ComponentFactory.Krypton.Docking.DockableWorkspaceCellEventArgs)">
      <summary>
            Raises the DockableWorkspaceCellRemoved event.
            </summary>
      <param name="e">An DockableWorkspaceCellEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnDockspaceAdding(ComponentFactory.Krypton.Docking.DockspaceEventArgs)">
      <summary>
            Raises the DockspaceAdding event.
            </summary>
      <param name="e">An DockspaceAddingEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnDockspaceRemoved(ComponentFactory.Krypton.Docking.DockspaceEventArgs)">
      <summary>
            Raises the DockspaceRemoved event.
            </summary>
      <param name="e">An DockspaceAddingEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnDockspaceCellAdding(ComponentFactory.Krypton.Docking.DockspaceCellEventArgs)">
      <summary>
            Raises the DockspaceCellAdding event.
            </summary>
      <param name="e">An DockspaceCellEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnDockspaceCellRemoved(ComponentFactory.Krypton.Docking.DockspaceCellEventArgs)">
      <summary>
            Raises the DockspaceCellRemoved event.
            </summary>
      <param name="e">An DockspaceCellEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnDockspaceSeparatorAdding(ComponentFactory.Krypton.Docking.DockspaceSeparatorEventArgs)">
      <summary>
            Raises the DockspaceSeparatorAdding event.
            </summary>
      <param name="e">An DockspaceSeparatorEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnDockspaceSeparatorRemoved(ComponentFactory.Krypton.Docking.DockspaceSeparatorEventArgs)">
      <summary>
            Raises the DockspaceSeparatorRemoved event.
            </summary>
      <param name="e">An DockspaceSeparatorEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnFloatspaceAdding(ComponentFactory.Krypton.Docking.FloatspaceEventArgs)">
      <summary>
            Raises the FloatspaceAdding event.
            </summary>
      <param name="e">An FloatspaceEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnFloatspaceRemoved(ComponentFactory.Krypton.Docking.FloatspaceEventArgs)">
      <summary>
            Raises the FloatspaceRemoved event.
            </summary>
      <param name="e">An FloatspaceEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnFloatspaceCellAdding(ComponentFactory.Krypton.Docking.FloatspaceCellEventArgs)">
      <summary>
            Raises the FloatspaceCellAdding event.
            </summary>
      <param name="e">An FloatspaceCellEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnFloatspaceCellRemoved(ComponentFactory.Krypton.Docking.FloatspaceCellEventArgs)">
      <summary>
            Raises the FloatspaceCellRemoved event.
            </summary>
      <param name="e">An FloatspaceCellEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnFloatingWindowAdding(ComponentFactory.Krypton.Docking.FloatingWindowEventArgs)">
      <summary>
            Raises the FloatingWindowAdding event.
            </summary>
      <param name="e">An FloatingWindowEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnFloatingWindowRemoved(ComponentFactory.Krypton.Docking.FloatingWindowEventArgs)">
      <summary>
            Raises the FloatingWindowRemoved event.
            </summary>
      <param name="e">An FloatingWindowEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnAutoHiddenShowingStateChanged(ComponentFactory.Krypton.Docking.AutoHiddenShowingStateEventArgs)">
      <summary>
            Raises the AutoHiddenShowingStateChanged event.
            </summary>
      <param name="e">An AutoHiddenShowingStateEventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnDoDragDropEnd(System.EventArgs)">
      <summary>
            Raises the DoDragDropEnd event.
            </summary>
      <param name="e">An EventArgs containing the event args.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingManager.OnDoDragDropQuit(System.EventArgs)">
      <summary>
            Raises the DoDragDropQuit event.
            </summary>
      <param name="e">An EventArgs containing the event args.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingManager.XmlElementName">
      <summary>
            Gets the xml element name to use when saving.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.KryptonDockingControl">
      <summary>
            Provides docking functionality for a control instance.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingControl.#ctor(System.String,System.Windows.Forms.Control)">
      <summary>
            Initialize a new instance of the KryptonDockingControl class.
            </summary>
      <param name="name">Initial name of the element.</param>
      <param name="control">Reference to control derived instance.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingControl.#ctor(System.String,System.Windows.Forms.Control,ComponentFactory.Krypton.Docking.KryptonDockingNavigator)">
      <summary>
            Initialize a new instance of the KryptonDockingControl class.
            </summary>
      <param name="name">Initial name of the element.</param>
      <param name="control">Reference to control derived instance.</param>
      <param name="navigator">Inner space occupied by a KryptonDockingNavigator.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingControl.#ctor(System.String,System.Windows.Forms.Control,ComponentFactory.Krypton.Docking.KryptonDockingWorkspace)">
      <summary>
            Initialize a new instance of the KryptonDockingControl class.
            </summary>
      <param name="name">Initial name of the element.</param>
      <param name="control">Reference to control derived instance.</param>
      <param name="workspace">Inner space occupied by a KryptonDockingNavigator.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingControl.Control">
      <summary>
            Gets the control this element is managing.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingControl.InnerMinimum">
      <summary>
            Gets and sets the minimum size for the inner area of the control that docking should not overlap.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingControl.PropogateAction(ComponentFactory.Krypton.Docking.DockingPropogateAction,System.String[])">
      <summary>
            Propagates an action request down the hierarchy of docking elements.
            </summary>
      <param name="action">Action that is requested to be performed.</param>
      <param name="uniqueNames">Array of unique names of the pages the action relates to.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingControl.PropogateDragTargets(ComponentFactory.Krypton.Docking.KryptonFloatingWindow,ComponentFactory.Krypton.Navigator.PageDragEndData,ComponentFactory.Krypton.Navigator.DragTargetList)">
      <summary>
            Propagates a request for drag targets down the hierarchy of docking elements.
            </summary>
      <param name="floatingWindow">Reference to window being dragged.</param>
      <param name="dragData">Set of pages being dragged.</param>
      <param name="targets">Collection of drag targets.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.KryptonDockingControl.XmlElementName">
      <summary>
            Gets the xml element name to use when saving.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.KryptonDockingControl.LoadElementFromXml(System.Xml.XmlReader,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Loads docking configuration information using a provider xml reader.
            </summary>
      <param name="xmlReader">Xml reader object.</param>
      <param name="pages">Collection of available pages for adding.</param>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.AutoHiddenGroupEventArgs">
      <summary>
            Event arguments for a AutoHiddenGroupAdding/AutoHiddenGroupRemoved events.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.AutoHiddenGroupEventArgs.#ctor(ComponentFactory.Krypton.Docking.KryptonAutoHiddenGroup,ComponentFactory.Krypton.Docking.KryptonDockingAutoHiddenGroup)">
      <summary>
            Initialize a new instance of the AutoHiddenGroupEventArgs class.
            </summary>
      <param name="control">Reference to auto hidden group control instance.</param>
      <param name="element">Reference to docking auto hidden group element that is managing the control.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.AutoHiddenGroupEventArgs.AutoHiddenGroupControl">
      <summary>
            Gets a reference to the KryptonAutoHiddenGroup control.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.AutoHiddenGroupEventArgs.AutoHiddenGroupElement">
      <summary>
            Gets a reference to the KryptonDockingAutoHiddenGroup that is managing the group.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.AutoHiddenGroupPanelEventArgs">
      <summary>
            Event arguments for a AutoHiddenGroupPanelAdding/AutoHiddenGroupPanelRemoved events.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.AutoHiddenGroupPanelEventArgs.#ctor(ComponentFactory.Krypton.Docking.KryptonAutoHiddenPanel,ComponentFactory.Krypton.Docking.KryptonDockingEdgeAutoHidden)">
      <summary>
            Initialize a new instance of the AutoHiddenGroupPanelEventArgs class.
            </summary>
      <param name="autoHiddenPanel">Reference to auto hidden panel control instance.</param>
      <param name="element">Reference to docking auto hidden edge element that is managing the panel.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.AutoHiddenGroupPanelEventArgs.AutoHiddenPanelControl">
      <summary>
            Gets a reference to the KryptonAutoHiddenPanel control.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.AutoHiddenGroupPanelEventArgs.EdgeAutoHiddenElement">
      <summary>
            Gets a reference to the KryptonDockingEdgeAutoHidden that is managing the edge.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.AutoHiddenSeparatorResizeEventArgs">
      <summary>
            Event arguments for a AutoHiddenSeparatorResize event.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.AutoHiddenSeparatorResizeEventArgs.#ctor(ComponentFactory.Krypton.Toolkit.KryptonSeparator,ComponentFactory.Krypton.Docking.KryptonDockspace,ComponentFactory.Krypton.Navigator.KryptonPage,System.Drawing.Rectangle)">
      <summary>
            Initialize a new instance of the AutoHiddenSeparatorResizeEventArgs class.
            </summary>
      <param name="separator">Reference to separator control instance.</param>
      <param name="dockspace">Reference to dockspace control instance.</param>
      <param name="page">Reference to page contained in the dockspace.</param>
      <param name="resizeRect">Initial resizing rectangle.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.AutoHiddenSeparatorResizeEventArgs.SeparatorControl">
      <summary>
            Gets a reference to the KryptonSeparator control.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.AutoHiddenSeparatorResizeEventArgs.DockspaceControl">
      <summary>
            Gets a reference to the KryptonDockspace control.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.AutoHiddenSeparatorResizeEventArgs.Page">
      <summary>
            Gets a reference to the KryptonPage instance.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.AutoHiddenSeparatorResizeEventArgs.ResizeRect">
      <summary>
            Gets and sets the rectangle that limits resizing of the dockspace using the separator.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.CloseRequestEventArgs">
      <summary>
            Event arguments for the PageCloseRequest event.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.CloseRequestEventArgs.#ctor(System.String,ComponentFactory.Krypton.Docking.DockingCloseRequest)">
      <summary>
            Initialize a new instance of the CloseRequestEventArgs class.
            </summary>
      <param name="uniqueName">Unique name of the page associated with the event.</param>
      <param name="closeRequest">Initial close action to use.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.CloseRequestEventArgs.CloseRequest">
      <summary>
            Gets and sets the close action to be performed.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.CancelUniqueNameEventArgs">
      <summary>
            Event arguments for events that need to provide a unique name but can be cancelled.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.CancelUniqueNameEventArgs.#ctor(System.String,System.Boolean)">
      <summary>
            Initialize a new instance of the CancelUniqueNameEventArgs class.
            </summary>
      <param name="uniqueName">Unique name of page.</param>
      <param name="cancel">Initial value for the cancel property.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.CancelUniqueNameEventArgs.Cancel">
      <summary>
            Gets and sets a value indicating if the event action should be cancelled.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.CancelDropDownEventArgs">
      <summary>
            Event arguments for cancellable events that need to provide a unique name and context menu.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.CancelDropDownEventArgs.#ctor(ComponentFactory.Krypton.Toolkit.KryptonContextMenu,ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Initialize a new instance of the CancelDropDownEventArgs class.
            </summary>
      <param name="contextMenu">Reference to associated context menu.</param>
      <param name="page">Reference to the associated page.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.CancelDropDownEventArgs.KryptonContextMenu">
      <summary>
            Gets a reference to the context menu.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.CancelDropDownEventArgs.Page">
      <summary>
            Gets a reference to the page.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.ContextPageEventArgs">
      <summary>
            Event arguments for events that need a page and context menu.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.ContextPageEventArgs.#ctor(ComponentFactory.Krypton.Navigator.KryptonPage,ComponentFactory.Krypton.Toolkit.KryptonContextMenu,System.Boolean)">
      <summary>
            Initialize a new instance of the ContextPageEventArgs class.
            </summary>
      <param name="page">Page associated with the context menu.</param>
      <param name="contextMenu">Context menu that can be customized.</param>
      <param name="cancel">Initial value for the cancel property.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.ContextPageEventArgs.Page">
      <summary>
            Gets access to page associated with the context menu.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.ContextPageEventArgs.KryptonContextMenu">
      <summary>
            Gets access to context menu that can be customized.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.AutoHiddenShowingStateEventArgs">
      <summary>
            Event arguments for the change in auto hidden page showing state.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.AutoHiddenShowingStateEventArgs.#ctor(ComponentFactory.Krypton.Navigator.KryptonPage,ComponentFactory.Krypton.Docking.DockingAutoHiddenShowState)">
      <summary>
            Initialize a new instance of the AutoHiddenShowingStateEventArgs class.
            </summary>
      <param name="page">Page for which state has changed.</param>
      <param name="state">New state of the auto hidden page.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.AutoHiddenShowingStateEventArgs.Page">
      <summary>
            Gets the page that has had the state change.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.AutoHiddenShowingStateEventArgs.NewState">
      <summary>
            Gets the new state of the auto hidden page.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockableNavigatorEventArgs">
      <summary>
            Event arguments for a DockableNavigatorEventArgs event.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockableNavigatorEventArgs.#ctor(ComponentFactory.Krypton.Docking.KryptonDockableNavigator,ComponentFactory.Krypton.Docking.KryptonDockingNavigator)">
      <summary>
            Initialize a new instance of the DockableNavigatorEventArgs class.
            </summary>
      <param name="navigator">Reference to dockable navigator control instance.</param>
      <param name="element">Reference to docking navigator element that is managing the dockable workspace control.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockableNavigatorEventArgs.DockableNavigatorControl">
      <summary>
            Gets a reference to the KryptonDockableNavigator control.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockableNavigatorEventArgs.DockingNavigatorElement">
      <summary>
            Gets a reference to the KryptonDockingNavigator that is managing the dockable workspace control.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockPageSavingEventArgs">
      <summary>
            Event data for saving docking page configuration.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockPageSavingEventArgs.#ctor(ComponentFactory.Krypton.Docking.KryptonDockingManager,System.Xml.XmlWriter,ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Initialize a new instance of the DockPageSavingEventArgs class.
            </summary>
      <param name="manager">Reference to owning docking manager instance.</param>
      <param name="xmlWriter">Xml writer for persisting custom data.</param>
      <param name="page">Reference to page being saved.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockPageSavingEventArgs.Page">
      <summary>
            Gets the saving page reference.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockPageLoadingEventArgs">
      <summary>
            Event data for loading docking page configuration.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockPageLoadingEventArgs.#ctor(ComponentFactory.Krypton.Docking.KryptonDockingManager,System.Xml.XmlReader,ComponentFactory.Krypton.Navigator.KryptonPage)">
      <summary>
            Initialize a new instance of the DockPageLoadingEventArgs class.
            </summary>
      <param name="manager">Reference to owning docking manager instance.</param>
      <param name="xmlReading">Xml reader for persisting custom data.</param>
      <param name="page">Reference to page being loaded.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockPageLoadingEventArgs.Page">
      <summary>
            Gets the loading page reference.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.PagesEventArgs">
      <summary>
            Event arguments for events that need to provide a colletion of pages.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.PagesEventArgs.#ctor(ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Initialize a new instance of the PagesEventArgs class.
            </summary>
      <param name="pages">Collection of pages.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.PagesEventArgs.Pages">
      <summary>
            Gets access to a collection of pages.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.ScreenAndOffsetEventArgs">
      <summary>
            Event arguments for events that need a screen point and element offset.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.ScreenAndOffsetEventArgs.#ctor(System.Drawing.Point,System.Drawing.Point)">
      <summary>
            Initialize a new instance of the ScreenAndOffsetEventArgs class.
            </summary>
      <param name="screenPoint">Screen point.</param>
      <param name="elementOffset">Element offset.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.ScreenAndOffsetEventArgs.ScreenPoint">
      <summary>
            Gets the screen point.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.ScreenAndOffsetEventArgs.ElementOffset">
      <summary>
            Gets the element offset.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.UniqueNamesEventArgs">
      <summary>
            Event arguments for events that need to provide a set of unique names.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.UniqueNamesEventArgs.#ctor(System.String[])">
      <summary>
            Initialize a new instance of the UniqueNamesEventArgs class.
            </summary>
      <param name="uniqueNames">Array of unique names.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.UniqueNamesEventArgs.UniqueNames">
      <summary>
            Gets the array of unique names associated with the event.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.StorePageEventArgs">
      <summary>
            Event arguments for events that need to provide a store page reference.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.StorePageEventArgs.#ctor(ComponentFactory.Krypton.Docking.KryptonStorePage)">
      <summary>
            Initialize a new instance of the StorePageEventArgs class.
            </summary>
      <param name="storePage">Reference to store page that is associated with the event.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.StorePageEventArgs.StorePage">
      <summary>
            Gets a reference to store page that is associated with the event.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.UniqueNameEventArgs">
      <summary>
            Event arguments for events that need to provide a unique name.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.UniqueNameEventArgs.#ctor(System.String)">
      <summary>
            Initialize a new instance of the UniqueNameEventArgs class.
            </summary>
      <param name="uniqueName">Unique name of page.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.UniqueNameEventArgs.UniqueName">
      <summary>
            Gets the unique name of a page.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockspaceSeparatorResizeEventArgs">
      <summary>
            Event arguments for a DockspaceSeparatorResize event.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockspaceSeparatorResizeEventArgs.#ctor(ComponentFactory.Krypton.Toolkit.KryptonSeparator,ComponentFactory.Krypton.Docking.KryptonDockingDockspace,System.Drawing.Rectangle)">
      <summary>
            Initialize a new instance of the DockspaceSeparatorResizeEventArgs class.
            </summary>
      <param name="separator">Reference to separator control instance.</param>
      <param name="element">Reference to dockspace docking element that is managing the separator.</param>
      <param name="resizeRect">Initial resizing rectangle.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockspaceSeparatorResizeEventArgs.ResizeRect">
      <summary>
            Gets and sets the rectangle that limits resizing of the dockspace using the separator.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockableWorkspaceEventArgs">
      <summary>
            Event arguments for a DockableWorkspaceRemoved event.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockableWorkspaceEventArgs.#ctor(ComponentFactory.Krypton.Docking.KryptonDockableWorkspace,ComponentFactory.Krypton.Docking.KryptonDockingWorkspace)">
      <summary>
            Initialize a new instance of the DockableWorkspaceEventArgs class.
            </summary>
      <param name="workspace">Reference to dockable workspace control instance.</param>
      <param name="element">Reference to docking workspace element that is managing the dockable workspace control.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockableWorkspaceEventArgs.DockableWorkspaceControl">
      <summary>
            Gets a reference to the KryptonDockableWorkspace control.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockableWorkspaceEventArgs.DockingWorkspaceElement">
      <summary>
            Gets a reference to the KryptonDockingWorkspace that is managing the dockable workspace control.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockableWorkspaceCellEventArgs">
      <summary>
            Event arguments for a DockableWorkspaceCellAdding/DockableWorkspaceCellRemoving events.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockableWorkspaceCellEventArgs.#ctor(ComponentFactory.Krypton.Docking.KryptonDockableWorkspace,ComponentFactory.Krypton.Docking.KryptonDockingWorkspace,ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell)">
      <summary>
            Initialize a new instance of the DockableWorkspaceCellEventArgs class.
            </summary>
      <param name="workspace">Reference to existing dockable workspace control instance.</param>
      <param name="element">Reference to docking workspace element that is managing the dockable workspace control.</param>
      <param name="cell">Reference to workspace control cell instance.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockableWorkspaceCellEventArgs.DockableWorkspaceControl">
      <summary>
            Gets a reference to the KryptonDockableWorkspace that contains the cell.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockableWorkspaceCellEventArgs.WorkspaceElement">
      <summary>
            Gets a reference to the KryptonDockingWorkspace that is managing the dockable workspace.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockableWorkspaceCellEventArgs.CellControl">
      <summary>
            Gets a reference to the KryptonWorkspaceCell control.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockspaceEventArgs">
      <summary>
            Event arguments for a DockspaceAdding/DockspaceRemoved events.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockspaceEventArgs.#ctor(ComponentFactory.Krypton.Docking.KryptonDockspace,ComponentFactory.Krypton.Docking.KryptonDockingDockspace)">
      <summary>
            Initialize a new instance of the DockspaceEventArgs class.
            </summary>
      <param name="dockspace">Reference to new dockspace control instance.</param>
      <param name="element">Reference to docking dockspace element that is managing the dockspace control.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockspaceEventArgs.DockspaceControl">
      <summary>
            Gets a reference to the KryptonDockspace control.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockspaceEventArgs.DockspaceElement">
      <summary>
            Gets a reference to the KryptonDockingDockspace that is managing the dockspace control.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.FloatspaceEventArgs">
      <summary>
            Event arguments for a FloatspaceAdding/FloatspaceRemoved event.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.FloatspaceEventArgs.#ctor(ComponentFactory.Krypton.Docking.KryptonFloatspace,ComponentFactory.Krypton.Docking.KryptonDockingFloatspace)">
      <summary>
            Initialize a new instance of the FloatspaceEventArgs class.
            </summary>
      <param name="floatspace">Reference to new floatspace control instance.</param>
      <param name="element">Reference to docking floatspace element that is managing the floatspace control.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.FloatspaceEventArgs.FloatspaceControl">
      <summary>
            Gets a reference to the KryptonFloatspace control..
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.FloatspaceEventArgs.FloatspaceElement">
      <summary>
            Gets a reference to the KryptonDockingFloatspace that is managing the space control.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.FloatspaceCellEventArgs">
      <summary>
            Event arguments for a FloatspaceCellAdding/FloatingCellRemoving events.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.FloatspaceCellEventArgs.#ctor(ComponentFactory.Krypton.Docking.KryptonFloatspace,ComponentFactory.Krypton.Docking.KryptonDockingFloatspace,ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell)">
      <summary>
            Initialize a new instance of the FloatspaceCellEventArgs class.
            </summary>
      <param name="floatspace">Reference to existing floatspace control instance.</param>
      <param name="element">Reference to docking floatspace element that is managing the floatspace control.</param>
      <param name="cell">Reference tofloatspace control cell instance.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.FloatspaceCellEventArgs.FloatspaceControl">
      <summary>
            Gets a reference to the KryptonFloatspace control.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.FloatspaceCellEventArgs.FloatspaceElement">
      <summary>
            Gets a reference to the KryptonDockingFloatspace that is managing the floatspace.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.FloatspaceCellEventArgs.CellControl">
      <summary>
            Gets a reference to the KryptonWorkspaceCell control.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.FloatingWindowEventArgs">
      <summary>
            Event arguments for a FloatingWindowAdding/FloatingWindowRemoved event.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.FloatingWindowEventArgs.#ctor(ComponentFactory.Krypton.Docking.KryptonFloatingWindow,ComponentFactory.Krypton.Docking.KryptonDockingFloatingWindow)">
      <summary>
            Initialize a new instance of the FloatingWindowEventArgs class.
            </summary>
      <param name="floatingWindow">Reference to floating window instance.</param>
      <param name="element">Reference to docking floating winodw element that is managing the floating window.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.FloatingWindowEventArgs.FloatingWindow">
      <summary>
            Gets a reference to the KryptonFloatingWindow control.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.FloatingWindowEventArgs.FloatingWindowElement">
      <summary>
            Gets a reference to the KryptonDockingFloatingWindow that is managing the dockspace.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockspaceSeparatorEventArgs">
      <summary>
            Event arguments for a DockspaceSeparatorAdding/DockspaceSeparatorRemoved event.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockspaceSeparatorEventArgs.#ctor(ComponentFactory.Krypton.Toolkit.KryptonSeparator,ComponentFactory.Krypton.Docking.KryptonDockingDockspace)">
      <summary>
            Initialize a new instance of the DockspaceSeparatorEventArgs class.
            </summary>
      <param name="separator">Reference to separator control instance.</param>
      <param name="element">Reference to dockspace docking element that is managing the separator.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockspaceSeparatorEventArgs.SeparatorControl">
      <summary>
            Gets a reference to the KryptonSeparator control..
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockspaceSeparatorEventArgs.DockspaceElement">
      <summary>
            Gets a reference to the KryptonDockingDockspace that is managing the dockspace.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockspaceCellEventArgs">
      <summary>
            Event arguments for a DockspaceCellAdding/DockspaceCellRemoving events.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockspaceCellEventArgs.#ctor(ComponentFactory.Krypton.Docking.KryptonDockspace,ComponentFactory.Krypton.Docking.KryptonDockingDockspace,ComponentFactory.Krypton.Workspace.KryptonWorkspaceCell)">
      <summary>
            Initialize a new instance of the DockspaceCellEventArgs class.
            </summary>
      <param name="dockspace">Reference to existing dockspace control instance.</param>
      <param name="element">Reference to docking dockspace element that is managing the dockspace control.</param>
      <param name="cell">Reference to dockspace control cell instance.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockspaceCellEventArgs.DockspaceControl">
      <summary>
            Gets a reference to the KryptonDockspace that contains the cell.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockspaceCellEventArgs.DockspaceElement">
      <summary>
            Gets a reference to the KryptonDockingDockspace that is managing the dockspace.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockspaceCellEventArgs.CellControl">
      <summary>
            Gets a reference to the KryptonWorkspaceCell control.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockGlobalLoadingEventArgs">
      <summary>
            Event data for loading global docking configuration.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockGlobalLoadingEventArgs.#ctor(ComponentFactory.Krypton.Docking.KryptonDockingManager,System.Xml.XmlReader)">
      <summary>
            Initialize a new instance of the DockGlobalLoadingEventArgs class.
            </summary>
      <param name="manager">Reference to owning docking manager instance.</param>
      <param name="xmlReading">Xml reader for persisting custom data.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockGlobalLoadingEventArgs.DockingManager">
      <summary>
            Gets the docking manager reference.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockGlobalLoadingEventArgs.XmlReader">
      <summary>
            Gets the xml reader.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockGlobalSavingEventArgs">
      <summary>
            Event data for saving global docking configuration.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockGlobalSavingEventArgs.#ctor(ComponentFactory.Krypton.Docking.KryptonDockingManager,System.Xml.XmlWriter)">
      <summary>
            Initialize a new instance of the DockGlobalSavingEventArgs class.
            </summary>
      <param name="manager">Reference to owning docking manager instance.</param>
      <param name="xmlWriter">Xml writer for persisting custom data.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockGlobalSavingEventArgs.DockingManager">
      <summary>
            Gets the docking manager reference.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockGlobalSavingEventArgs.XmlWriter">
      <summary>
            Gets the xml writer.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.ObscureControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Raises the PaintBackground event.
            </summary>
      <param name="e">An PaintEventArgs containing the event data.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.ObscureControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Raises the Paint event.
            </summary>
      <param name="e">An PaintEventArgs containing the event data.</param>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingMultiUpdate">
      <summary>
            Helper class used inside a 'using' statement to notify start and end of a multi-part update.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingMultiUpdate.#ctor(ComponentFactory.Krypton.Docking.IDockingElement)">
      <summary>
            Initialize a new instance of the DockingMultiUpdate class.
            </summary>
      <param name="dockingElement">Reference to root element of docking hierarchy.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingMultiUpdate.Dispose">
      <summary>
            Release managed and unmanaged resources.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingHelper">
      <summary>
             Set of common helper routines for Docking functionality
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingHelper.DockStyleFromDockEdge(ComponentFactory.Krypton.Docking.DockingEdge,System.Boolean)">
      <summary>
            Convert from DockEdge to DockStyle enumeration value.
            </summary>
      <param name="edge">DockEdge value to convert.</param>
      <param name="opposite">Should the separator be docked against the opposite edge.</param>
      <returns>DockStyle value.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingHelper.OrientationFromDockEdge(ComponentFactory.Krypton.Docking.DockingEdge)">
      <summary>
            Convert the DockEdge to Orientation enumeration value.
            </summary>
      <param name="edge">DockEdge value to convert.</param>
      <returns>Orientation value.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingHelper.InnerRectangle(System.Windows.Forms.Control)">
      <summary>
            Find the inner space that occupied by the edge docking controls.
            </summary>
      <param name="c">Reference to control.</param>
      <returns>Rectangle in control coordinates.</returns>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.IDockingElement">
      <summary>
            Interface exposed by elements within the docking hierarchy.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.IDockingElement.Name">
      <summary>
            Gets and sets the name of the docking element.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.IDockingElement.Path">
      <summary>
            Gets a comma separated list of names leading to this element.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.ResolvePath(System.String)">
      <summary>
            Resolve the provided path.
            </summary>
      <param name="path">Comma separated list of names to resolve.</param>
      <returns>IDockingElement reference if path was resolved with success; otherwise null.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.IDockingElement.Parent">
      <summary>
            Gets and sets access to the parent docking element.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.PropogateAction(ComponentFactory.Krypton.Docking.DockingPropogateAction,System.String[])">
      <summary>
            Propagates an action request down the hierarchy of docking elements.
            </summary>
      <param name="action">Action that is requested to be performed.</param>
      <param name="uniqueNames">Array of unique names of the pages the action relates to.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.PropogateAction(ComponentFactory.Krypton.Docking.DockingPropogateAction,ComponentFactory.Krypton.Navigator.KryptonPage[])">
      <summary>
            Propagates an action request down the hierarchy of docking elements.
            </summary>
      <param name="action">Action that is requested to be performed.</param>
      <param name="pages">Array of pages the action relates to.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.PropogateAction(ComponentFactory.Krypton.Docking.DockingPropogateAction,System.Int32)">
      <summary>
            Propagates an action request down the hierarchy of docking elements.
            </summary>
      <param name="action">Action that is requested to be performed.</param>
      <param name="value">Integer value associated with the request.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.PropogateBoolState(ComponentFactory.Krypton.Docking.DockingPropogateBoolState,System.String)">
      <summary>
            Propagates a boolean state request down the hierarchy of docking elements.
            </summary>
      <param name="state">Boolean state that is requested to be recovered.</param>
      <param name="uniqueName">Unique name of the page the request relates to.</param>
      <returns>True/False if state is known; otherwise null indicating no information available.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.PropogateIntState(ComponentFactory.Krypton.Docking.DockingPropogateIntState,System.Int32@)">
      <summary>
            Propagates an integer state request down the hierarchy of docking elements.
            </summary>
      <param name="state">Integer state that is requested to be recovered.</param>
      <param name="value">Value discovered from matching </param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.PropogateDragTargets(ComponentFactory.Krypton.Docking.KryptonFloatingWindow,ComponentFactory.Krypton.Navigator.PageDragEndData,ComponentFactory.Krypton.Navigator.DragTargetList)">
      <summary>
            Propagates a request for drag targets down the hierarchy of docking elements.
            </summary>
      <param name="floatingWindow">Reference to window being dragged.</param>
      <param name="dragData">Set of pages being dragged.</param>
      <param name="targets">Collection of drag targets.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.PropogatePageState(ComponentFactory.Krypton.Docking.DockingPropogatePageState,System.String)">
      <summary>
            Propagates a page request down the hierarchy of docking elements.
            </summary>
      <param name="state">Request that should result in a page reference if found.</param>
      <param name="uniqueName">Unique name of the page the request relates to.</param>
      <returns>Reference to page that matches the request; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.PropogatePageList(ComponentFactory.Krypton.Docking.DockingPropogatePageList,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Propagates a page list request down the hierarchy of docking elements.
            </summary>
      <param name="state">Request that should result in pages collection being modified.</param>
      <param name="pages">Pages collection for modification by the docking elements.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.PropogateCellList(ComponentFactory.Krypton.Docking.DockingPropogateCellList,ComponentFactory.Krypton.Workspace.KryptonWorkspaceCellList)">
      <summary>
            Propagates a workspace cell list request down the hierarchy of docking elements.
            </summary>
      <param name="state">Request that should result in the cells collection being modified.</param>
      <param name="cells">Cells collection for modification by the docking elements.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.FindPageLocation(System.String)">
      <summary>
            Find the docking location of the named page.
            </summary>
      <param name="uniqueName">Unique name of the page.</param>
      <returns>Enumeration value indicating docking location.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.FindPageElement(System.String)">
      <summary>
            Find the docking element that contains the named page.
            </summary>
      <param name="uniqueName">Unique name of the page.</param>
      <returns>IDockingElement reference if page is found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.FindStorePageElement(ComponentFactory.Krypton.Docking.DockingLocation,System.String)">
      <summary>
            Find the docking element that contains the location specific store page for the named page.
            </summary>
      <param name="location">Location to be searched.</param>
      <param name="uniqueName">Unique name of the page to be found.</param>
      <returns>IDockingElement reference if store page is found; otherwise null.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.FindDockingFloating(System.String)">
      <summary>
            Find a floating docking element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable floating element is required.</param>
      <returns>KryptonDockingFloating reference if found; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.FindDockingEdgeDocked(System.String)">
      <summary>
            Find a edge docked element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable docking edge element is required.</param>
      <returns>KryptonDockingEdgeDocked reference if found; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.FindDockingEdgeAutoHidden(System.String)">
      <summary>
            Find a edge auto hidden element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable auto hidden edge element is required.</param>
      <returns>KryptonDockingEdgeAutoHidden reference if found; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.FindDockingWorkspace(System.String)">
      <summary>
            Find a workspace element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable workspace element is required.</param>
      <returns>KryptonDockingWorkspace reference if found; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.FindDockingNavigator(System.String)">
      <summary>
            Find a navigator element by searching the hierarchy.
            </summary>
      <param name="uniqueName">Named page for which a suitable navigator element is required.</param>
      <returns>KryptonDockingNavigator reference if found; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.SaveElementToXml(System.Xml.XmlWriter)">
      <summary>
            Saves docking configuration information using a provider xml writer.
            </summary>
      <param name="xmlWriter">Xml writer object.</param>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IDockingElement.LoadElementFromXml(System.Xml.XmlReader,ComponentFactory.Krypton.Navigator.KryptonPageCollection)">
      <summary>
            Loads docking configuration information using a provider xml reader.
            </summary>
      <param name="xmlReader">Xml reader object.</param>
      <param name="pages">Collection of available pages.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.IDockingElement.Count">
      <summary>
            Gets the number of child docking elements.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.IDockingElement.Item(System.Int32)">
      <summary>
            Gets the docking element at the specified index.
            </summary>
      <param name="index">Index.</param>
      <returns>Docking element at specified index.</returns>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.IDockingElement.Item(System.String)">
      <summary>
            Gets the docking element with the specified name.
            </summary>
      <param name="name">Name of element.</param>
      <returns>Docking element with specified name.</returns>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.IFloatingMessages">
      <summary>
            Interface exposed by elements that provide floating messages.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IFloatingMessages.OnKEYDOWN(System.Windows.Forms.Message@)">
      <summary>
            The WM_KEYDOWN message has occured.
            </summary>
      <returns>True to eat message; otherwise false.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IFloatingMessages.OnMOUSEMOVE">
      <summary>
            The WM_MOUSEMOVE message has occured.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.IFloatingMessages.OnLBUTTONUP">
      <summary>
            The WM_LBUTTONUP message has occured.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingEdge">
      <summary>
            Specifies a docking edge of a control.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingEdge.Left">
      <summary>Specifies the left edge of a control.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingEdge.Right">
      <summary>Specifies the right edge of a control.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingEdge.Top">
      <summary>Specifies the top edge of a control.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingEdge.Bottom">
      <summary>Specifies the bottom edge of a control.</summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingCloseRequest">
      <summary>
            Specifies the action to take when a docking close is required.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingCloseRequest.None">
      <summary>Specifies no action be taken.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingCloseRequest.RemovePage">
      <summary>Specifies the named page be removed from the docking hierarchy.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingCloseRequest.RemovePageAndDispose">
      <summary>Specifies the named page be removed from the docking hierarchy and then disposed.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingCloseRequest.HidePage">
      <summary>Specifies the named page be hidden.</summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingLocation">
      <summary>
            Specifies the current docking location of a page.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingLocation.AutoHidden">
      <summary>Specifies the page is auto hidden against a control edge.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingLocation.Docked">
      <summary>Specifies the page is docked against a control edge.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingLocation.Floating">
      <summary>Specifies the page is inside a floating window.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingLocation.Workspace">
      <summary>Specifies the page is inside a standalone workspace.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingLocation.Navigator">
      <summary>Specifies the page is inside a standalone navigator.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingLocation.Custom">
      <summary>Specifies the page is part of a custom extension.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingLocation.None">
      <summary>Specifies the page is not inside the docking hierarchy.</summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingAutoHiddenShowState">
      <summary>
            Specifies the sliding state of a docked auto hidden page.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingAutoHiddenShowState.Hidden">
      <summary>
            Specifies the auto hidden page has become hidden.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingAutoHiddenShowState.SlidingOut">
      <summary>
            Specifies the auto hidden page is sliding out into view.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingAutoHiddenShowState.SlidingIn">
      <summary>
            Specifies the auto hidden page is sliding back to be hidden.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingAutoHiddenShowState.Showing">
      <summary>
            Specifies the auto hidden page is fully showing.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingPropogateAction">
      <summary>
            Specifies a docking propogate action.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.Null">
      <summary>Specifies a null operation.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.StartUpdate">
      <summary>Specifies a multi-part update is starting.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.EndUpdate">
      <summary>Specifies a multi-part update has ended.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.ShowPages">
      <summary>Specifies all display elements of the named pages be shown.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.ShowAllPages">
      <summary>Specifies all display elements of all pages be shown.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.HidePages">
      <summary>Specifies all display elements of the named pages be hidden.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.HideAllPages">
      <summary>Specifies all display elements of all pages be hidden.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.StorePages">
      <summary>Specifies the named pages are replaced with position placeholders.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.StoreAllPages">
      <summary>Specifies all pages are replaced with position placeholders.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.RestorePages">
      <summary>Specifies the position placeholders are restored with actual pages.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.ClearAutoHiddenStoredPages">
      <summary>Specifies the auto hidden store pages should be removed for the named pages.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.ClearDockedStoredPages">
      <summary>Specifies the docked store pages should be removed for the named pages.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.ClearFloatingStoredPages">
      <summary>Specifies the floating store pages should be removed for the named pages.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.ClearFillerStoredPages">
      <summary>Specifies the filler store pages should be removed for the named pages.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.ClearStoredPages">
      <summary>Specifies all stored pages should be removed for the named pages.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.ClearAllStoredPages">
      <summary>Specifies all stored pages should be removed.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.RemovePages">
      <summary>Specifies all details of the named pages be removed.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.RemoveAndDisposePages">
      <summary>Specifies all details of the named pages be removed and the page disposed.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.RemoveAllPages">
      <summary>Specifies all details of all pages be removed.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.RemoveAndDisposeAllPages">
      <summary>Specifies all details of all pages be removed and the pages disposed.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.Loading">
      <summary>Specifies a loading operation is about to begin.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.RepositionDockspace">
      <summary>Specifies a dockspace with matching ordering value reposition its controls.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.StringChanged">
      <summary>Specifies the named string property has been updated.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateAction.DebugOutput">
      <summary>Specifies that debug output about the docking contents be output.</summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingPropogateBoolState">
      <summary>
            Specifies a docking propogate for boolean state.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateBoolState.ContainsPage">
      <summary>Specifies active state for a named page.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateBoolState.ContainsStorePage">
      <summary>Specifies store state for a named page.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateBoolState.IsPageShowing">
      <summary>Specifies showing state for a named page.</summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingPropogateIntState">
      <summary>
            Specifies a docking propogate for integer state.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateIntState.DockspaceOrder">
      <summary>Specifies control ordering for dockspace controls.</summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingPropogatePageState">
      <summary>
            Specifies a docking propogate for page references.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogatePageState.PageForUniqueName">
      <summary>Specifies a page referenced is required for the named page.</summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingPropogatePageList">
      <summary>
            Specifies a docking propogate for page list.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogatePageList.All">
      <summary>Specifies a list of all pages be created.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogatePageList.Docked">
      <summary>Specifies a list of all docked pages be created.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogatePageList.AutoHidden">
      <summary>Specifies a list of all auto hidden pages be created.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogatePageList.Floating">
      <summary>Specifies a list of all floating pages be created.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogatePageList.Filler">
      <summary>Specifies a list of all filler pages be created.</summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingPropogateCellList">
      <summary>
            Specifies a docking propogate for cell list.
            </summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateCellList.All">
      <summary>Specifies a list of all cells be created.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateCellList.Docked">
      <summary>Specifies a list of all docked cells be created.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateCellList.Floating">
      <summary>Specifies a list of all floating cells be created.</summary>
    </member>
    <member name="F:ComponentFactory.Krypton.Docking.DockingPropogateCellList.Workspace">
      <summary>Specifies a list of all workspace cells be created.</summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.DockingManagerStrings">
      <summary>
            Storage for docking managee strings.
            </summary>
    </member>
    <member name="E:ComponentFactory.Krypton.Docking.DockingManagerStrings.PropertyChanged">
      <summary>
            Occurs whenever a property has changed value.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingManagerStrings.#ctor(ComponentFactory.Krypton.Docking.KryptonDockingManager)">
      <summary>
            Initialize a new instance of the DockingManagerStrings class.
            </summary>
      <param name="docking">Reference to owning docking manager.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingManagerStrings.IsDefault">
      <summary>
            Gets a value indicating if all values are default.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingManagerStrings.TextAutoHide">
      <summary>
            Gets and sets the text to use for the auto hide button tooltip.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingManagerStrings.ResetTextAutoHide">
      <summary>
            Resets the TextAutoHide property to its default value.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingManagerStrings.TextClose">
      <summary>
            Gets and sets the text to use for the close button tooltip.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingManagerStrings.ResetTextClose">
      <summary>
            Resets the TextClose property to its default value.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingManagerStrings.TextCloseAllButThis">
      <summary>
            Gets and sets the text to use for the 'close all but this' button tooltip.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingManagerStrings.ResetTextCloseAllButThis">
      <summary>
            Resets the TextCloseAllButThis property to its default value.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingManagerStrings.TextDock">
      <summary>
            Gets and sets the text to use for the dock menu item.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingManagerStrings.ResetTextDock">
      <summary>
            Resets the TextDock property to its default value.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingManagerStrings.TextFloat">
      <summary>
            Gets and sets the text to use for the float menu item.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingManagerStrings.ResetTextFloat">
      <summary>
            Resets the TextFloat property to its default value.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingManagerStrings.TextHide">
      <summary>
            Gets and sets the text to use for the hide menu item.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingManagerStrings.ResetTextHide">
      <summary>
            Resets the TextHide property to its default value.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingManagerStrings.TextTabbedDocument">
      <summary>
            Gets and sets the text to use for the tabbed document menu item.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingManagerStrings.ResetTextTabbedDocument">
      <summary>
            Resets the TextTabbedDocument property to its default value.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.DockingManagerStrings.TextWindowLocation">
      <summary>
            Gets and sets the text to use for the drop down button tooltip.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingManagerStrings.ResetTextWindowLocation">
      <summary>
            Resets the TextWindowLocation property to its default value.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.DockingManagerStrings.OnPropertyChanged(System.String)">
      <summary>
            Raises the PropertyChanged event.
            </summary>
      <param name="propertyName">Name of the property that has changed.</param>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.Properties.Resources">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.Properties.Resources.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.Properties.Resources.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.Properties.Resources.CF_Logo">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.Properties.Resources.check2">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.Properties.Resources.delete2">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.Properties.Resources.help2">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="T:ComponentFactory.Krypton.Docking.ViewDrawAutoHiddenTab">
      <summary>
            View element that can draw an auto hidden tab based on a KryptonPage as the source.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.ViewDrawAutoHiddenTab.#ctor(ComponentFactory.Krypton.Navigator.KryptonPage,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
      <summary>
            Initialize a new instance of the ViewDrawAutoHiddenTab class.
            </summary>
      <param name="page">Reference to the page this tab represents.</param>
      <param name="orientation">Visual orientation used for drawing the tab.</param>
    </member>
    <member name="P:ComponentFactory.Krypton.Docking.ViewDrawAutoHiddenTab.Page">
      <summary>
            Gets access to the page associated with the view.
            </summary>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.ViewDrawAutoHiddenTab.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
      <summary>
            Gets the content image.
            </summary>
      <param name="state">The state for which the image is needed.</param>
      <returns>Image value.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.ViewDrawAutoHiddenTab.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
      <summary>
            Gets the image color that should be transparent.
            </summary>
      <param name="state">The state for which the image is needed.</param>
      <returns>Color value.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.ViewDrawAutoHiddenTab.GetShortText">
      <summary>
            Gets the content short text.
            </summary>
      <returns>String value.</returns>
    </member>
    <member name="M:ComponentFactory.Krypton.Docking.ViewDrawAutoHiddenTab.GetLongText">
      <summary>
            Gets the content long text.
            </summary>
      <returns>String value.</returns>
    </member>
    <member name="N:ComponentFactory.Krypton.Docking">
      <summary />
    </member>
    <member name="N:ComponentFactory.Krypton.Navigator">
      <summary />
    </member>
    <member name="N:ComponentFactory.Krypton.Ribbon">
      <summary />
    </member>
    <member name="N:ComponentFactory.Krypton.Toolkit">
      <summary />
    </member>
    <member name="N:ComponentFactory.Krypton.Toolkit.Utilities">
      <summary />
    </member>
    <member name="N:ComponentFactory.Krypton.Toolkit.Values">
      <summary />
    </member>
    <member name="N:ComponentFactory.Krypton.Workspace">
      <summary />
    </member>
  </members>
</doc>